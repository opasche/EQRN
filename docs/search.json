[{"path":"https://opasche.github.io/EQRN/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Olivier C. Pasche. Maintainer.","code":""},{"path":"https://opasche.github.io/EQRN/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pasche OC (2024). EQRN: Extreme Quantile Regression Neural Networks. R package version 0.1.0, https://github.com/opasche/EQRN.","code":"@Manual{,   title = {EQRN: Extreme Quantile Regression Neural Networks},   author = {Olivier C. Pasche},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/opasche/EQRN}, }"},{"path":"https://opasche.github.io/EQRN/index.html","id":"eqrn-extreme-quantile-regression-neural-networks-for-conditionnal-risk-assessment","dir":"","previous_headings":"","what":"Extreme Quantile Regression Neural Networks","title":"Extreme Quantile Regression Neural Networks","text":"user-friendly framework forecasting extrapolating extreme measures conditional risk using flexible neural network architectures. allows capturing complex multivariate dependencies, including dependencies observations, sequential dependence (time-series). implementation based article “Neural Networks Extreme Quantile Regression Application Forecasting Flood Risk” Olivier C. Pasche Sebastian Engelke (ArXiv:2208.07590).","code":""},{"path":"https://opasche.github.io/EQRN/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extreme Quantile Regression Neural Networks","text":"install development version EQRN, simply run R: package first loaded installation (e.g. library(EQRN) EQRN::fct()), necessary backend software torch dependency automatically installed. (Alternatively, EQRN::install_backend() can called perform backend installation manually.) information torch backend troubleshooting, visit torch installation guide.","code":"# install.packages(\"devtools\") devtools::install_github(\"opasche/EQRN\")"},{"path":"https://opasche.github.io/EQRN/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Extreme Quantile Regression Neural Networks","text":"Risk assessment extreme events requires accurate estimation high quantiles go beyond range historical observations. risk depends values observed predictors, regression techniques used interpolate predictor space. package propose EQRN model combines tools neural networks extreme value theory method capable extrapolation presence complex predictor dependence. Neural networks can naturally incorporate additional structure data. recurrent version EQRN able capture complex sequential dependence time series. corresponding article, EQRN applied forecasting flood risk Swiss Aare catchment. exploits information multiple covariates space time provide one-day-ahead predictions return levels exceedances probabilities. output complements static return level traditional extreme value analysis predictions able adapt distributional shifts experienced changing climate. model can help authorities manage flooding effectively minimize disastrous impacts early warning systems.","code":""},{"path":"https://opasche.github.io/EQRN/index.html","id":"basic-usage-example-for-exchangeable-data","dir":"","previous_headings":"","what":"Basic Usage Example for Exchangeable Data","title":"Extreme Quantile Regression Neural Networks","text":"example shows three simple steps fit EQRN model predict extreme conditional quantiles metrics new test data. example, toy ..d. dataset used.","code":""},{"path":"https://opasche.github.io/EQRN/index.html","id":"0-generate-a-toy-dataset","dir":"","previous_headings":"Basic Usage Example for Exchangeable Data","what":"0. Generate a toy dataset","title":"Extreme Quantile Regression Neural Networks","text":"","code":"scale_fct <- function(x1,x2){ 3 + cos(x1 + x2 + 0.5) }  set.seed(1) X_train <- matrix(stats::runif(5120), ncol=2) y_train <- scale_fct(X_train[,1], X_train[,2]) * stats::rt(2560, 4)  X_test <- matrix(stats::runif(2560), ncol=2)"},{"path":"https://opasche.github.io/EQRN/index.html","id":"step-1-construct-intermediate-quantiles","dir":"","previous_headings":"Basic Usage Example for Exchangeable Data","what":"Step 1. Construct intermediate quantiles","title":"Extreme Quantile Regression Neural Networks","text":"can achieved suitable quantile regression method. use generalised random forests grf package, easy use already quite flexible. One example use quantile regression neural network instead.","code":"library(grf)  # Choose an intermediate probability level. interm_lvl <- 0.8  # Fit a GRF for quantile regression with 500 trees (the more the better) on the training set (with a seed for reproducibility). fit_grf <- grf::quantile_forest(X_train, y_train, num.trees=1000, seed=21)  # Construct out-of-bag intermediate quantiles on the training set. intermediateq_train <- predict(fit_grf, newdata=NULL, quantiles=c(interm_lvl))$predictions"},{"path":"https://opasche.github.io/EQRN/index.html","id":"step-2-fit-the-tail-model","dir":"","previous_headings":"Basic Usage Example for Exchangeable Data","what":"Step 2. Fit the tail model","title":"Extreme Quantile Regression Neural Networks","text":"Fit EQRN network training set, intermediate quantiles varying threshold. : argument shape_fixed=TRUE removes covariate dependence shape output, argument net_structure=c(5,5) sets two hidden layers 5 neurons architecture, network trained 100 epochs (seed reproducibility).","code":"library(EQRN)  fit_eqrn <- EQRN_fit(X_train, y_train, intermediateq_train, interm_lvl,                      shape_fixed=TRUE, net_structure=c(5,5), n_epochs=100, seed=42) #> Epoch: 1 out of 100 , average train loss: 2.404647 #> Epoch: 100 out of 100 , average train loss: 2.311854"},{"path":"https://opasche.github.io/EQRN/index.html","id":"step-3-predict-conditional-quantiles-and-risk-metrics-for-new-test-observations","dir":"","previous_headings":"Basic Usage Example for Exchangeable Data","what":"Step 3. Predict conditional quantiles and risk metrics for new test observations","title":"Extreme Quantile Regression Neural Networks","text":"Package created Olivier C. PASCHE Research Center Statistics, University Geneva (CH), 2022. Supported Swiss National Science Foundation.","code":"# Desired probability levels at which to predict the conditional quantiles. levels_predict <- c(0.999, 0.9999)  # Predict intermediate test quantiles using the intermediate model. intermediateq_test <- predict(fit_grf, newdata=X_test, quantiles=c(interm_lvl))$predictions  # Predict the desired conditional extreme quantiles on the test set. qpred_eqrn <- EQRN_predict(fit_eqrn, X_test, levels_predict, intermediateq_test)  # Forecast the probability that Y_test would exceed a certain large value. large_value <- 10 ppred_eqrn <- EQRN_excess_probability(large_value, fit_eqrn, X_test, intermediateq_test) # Print some predictions: hn <- 10 results <- data.frame(X1=X_test[1:hn,1], X2=X_test[1:hn,2], pred_Y_Q_80=intermediateq_test[1:hn],                       pred_Y_Q_99.9=qpred_eqrn[1:hn,1], pred_Y_Q_99.99=qpred_eqrn[1:hn,2], Pr_Y_exceed_10=ppred_eqrn[1:hn])  print(results) #>           X1         X2 pred_Y_Q_80 pred_Y_Q_99.9 pred_Y_Q_99.99 Pr_Y_exceed_10 #> 1  0.5876351 0.83797214    2.741546      15.87502       33.91469    0.004054095 #> 2  0.9493471 0.74616973    2.123687      15.33688       33.48605    0.003427602 #> 3  0.7456916 0.24237508    2.698117      15.73987       33.65356    0.003939998 #> 4  0.2319869 0.70261432    3.041587      15.96008       33.70446    0.004288765 #> 5  0.7706744 0.19874048    4.725495      18.06010       36.37603    0.008155741 #> 6  0.7746018 0.03440777    5.414535      18.79252       37.16805    0.010750530 #> 7  0.7776956 0.33728896    3.136478      16.29012       34.35749    0.004594990 #> 8  0.2586140 0.49574342    3.457248      16.39834       34.17376    0.004917901 #> 9  0.7935616 0.60815766    2.557475      15.71578       33.78956    0.003852441 #> 10 0.1613134 0.52083200    2.045515      14.71575       32.11914    0.003049184"},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://opasche.github.io/EQRN/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://opasche.github.io/EQRN/reference/batch_size_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default batch size (internal) — batch_size_default","title":"Default batch size (internal) — batch_size_default","text":"Default batch size (internal)","code":""},{"path":"https://opasche.github.io/EQRN/reference/batch_size_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default batch size (internal) — batch_size_default","text":"","code":"batch_size_default(tensor_dat, batch_size = 256)"},{"path":"https://opasche.github.io/EQRN/reference/batch_size_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default batch size (internal) — batch_size_default","text":"tensor_dat torch::dataset(). batch_size initial batch size, default 256.","code":""},{"path":"https://opasche.github.io/EQRN/reference/batch_size_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default batch size (internal) — batch_size_default","text":"fixed batch_size.","code":""},{"path":"https://opasche.github.io/EQRN/reference/check_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Check directory existence — check_directory","title":"Check directory existence — check_directory","text":"Checks desired directory exists. , desired directory created.","code":""},{"path":"https://opasche.github.io/EQRN/reference/check_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check directory existence — check_directory","text":"","code":"check_directory(dir_name, recursive = TRUE, no_warning = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/check_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check directory existence — check_directory","text":"dir_name Path desired directory, string. recursive elements path last created? TRUE, behaves like Unix command mkdir -p. no_warning Whether cancel warning issued directory created (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/check_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check directory existence — check_directory","text":"","code":"if (FALSE) check_directory(\"./results/my_new_folder\")"},{"path":"https://opasche.github.io/EQRN/reference/check_X_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the simulation X matrix — check_X_matrix","title":"Check the simulation X matrix — check_X_matrix","text":"Check simulation X matrix","code":""},{"path":"https://opasche.github.io/EQRN/reference/check_X_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the simulation X matrix — check_X_matrix","text":"","code":"check_X_matrix(X, n, p)"},{"path":"https://opasche.github.io/EQRN/reference/check_X_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the simulation X matrix — check_X_matrix","text":"X Covariate matrix. n Number observations. p Number covariates.","code":""},{"path":"https://opasche.github.io/EQRN/reference/check_X_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the simulation X matrix — check_X_matrix","text":"Returns TRUE X matrix dimension n * p. Otherwise error raised.","code":""},{"path":"https://opasche.github.io/EQRN/reference/check_X_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the simulation X matrix — check_X_matrix","text":"","code":"#check_X_matrix(matrix(c(1, 2, 3, 4, 5, 6), ncol=2), n=3, p=2)"},{"path":"https://opasche.github.io/EQRN/reference/compute_EQRN_GPDLoss.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Pareto likelihood loss of a EQRN_iid predictor — compute_EQRN_GPDLoss","title":"Generalized Pareto likelihood loss of a EQRN_iid predictor — compute_EQRN_GPDLoss","text":"Generalized Pareto likelihood loss EQRN_iid predictor","code":""},{"path":"https://opasche.github.io/EQRN/reference/compute_EQRN_GPDLoss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Pareto likelihood loss of a EQRN_iid predictor — compute_EQRN_GPDLoss","text":"","code":"compute_EQRN_GPDLoss(   fit_eqrn,   X,   y,   intermediate_quantiles = NULL,   interm_lvl = fit_eqrn$interm_lvl,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/compute_EQRN_GPDLoss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Pareto likelihood loss of a EQRN_iid predictor — compute_EQRN_GPDLoss","text":"fit_eqrn Fitted \"EQRN_iid\" object. X Matrix covariates. y Response variable vector. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/compute_EQRN_GPDLoss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Pareto likelihood loss of a EQRN_iid predictor — compute_EQRN_GPDLoss","text":"Negative GPD log likelihood conditional EQRN predicted parameters response exceedances intermediate quantiles.","code":""},{"path":"https://opasche.github.io/EQRN/reference/compute_EQRN_seq_GPDLoss.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Pareto likelihood loss of a EQRN_seq predictor — compute_EQRN_seq_GPDLoss","title":"Generalized Pareto likelihood loss of a EQRN_seq predictor — compute_EQRN_seq_GPDLoss","text":"Generalized Pareto likelihood loss EQRN_seq predictor","code":""},{"path":"https://opasche.github.io/EQRN/reference/compute_EQRN_seq_GPDLoss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Pareto likelihood loss of a EQRN_seq predictor — compute_EQRN_seq_GPDLoss","text":"","code":"compute_EQRN_seq_GPDLoss(   fit_eqrn,   X,   Y,   intermediate_quantiles = NULL,   interm_lvl = fit_eqrn$interm_lvl,   seq_len = fit_eqrn$seq_len,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/compute_EQRN_seq_GPDLoss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Pareto likelihood loss of a EQRN_seq predictor — compute_EQRN_seq_GPDLoss","text":"fit_eqrn Fitted \"EQRN_seq\" object. X Matrix covariates. Y Response variable vector corresponding rows X. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. seq_len Data sequence length (.e. number past observations) used predict response quantile. default, training fit_eqrn$seq_len used. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/compute_EQRN_seq_GPDLoss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Pareto likelihood loss of a EQRN_seq predictor — compute_EQRN_seq_GPDLoss","text":"Negative GPD log likelihood conditional EQRN predicted parameters response exceedances intermediate quantiles.","code":""},{"path":"https://opasche.github.io/EQRN/reference/decay_learning_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs a learning rate decay step on an optimizer — decay_learning_rate","title":"Performs a learning rate decay step on an optimizer — decay_learning_rate","text":"Performs learning rate decay step optimizer","code":""},{"path":"https://opasche.github.io/EQRN/reference/decay_learning_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs a learning rate decay step on an optimizer — decay_learning_rate","text":"","code":"decay_learning_rate(optimizer, decay_rate)"},{"path":"https://opasche.github.io/EQRN/reference/decay_learning_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs a learning rate decay step on an optimizer — decay_learning_rate","text":"optimizer torch::optimizer object. decay_rate Learning rate decay factor.","code":""},{"path":"https://opasche.github.io/EQRN/reference/decay_learning_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs a learning rate decay step on an optimizer — decay_learning_rate","text":"optimizer decayed learning rate.","code":""},{"path":"https://opasche.github.io/EQRN/reference/default_device.html","id":null,"dir":"Reference","previous_headings":"","what":"Default torch device — default_device","title":"Default torch device — default_device","text":"Default torch device","code":""},{"path":"https://opasche.github.io/EQRN/reference/default_device.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default torch device — default_device","text":"","code":"default_device()"},{"path":"https://opasche.github.io/EQRN/reference/default_device.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default torch device — default_device","text":"Returns torch::torch_device(\"cuda\") torch::cuda_is_available(), torch::torch_device(\"cpu\") otherwise.","code":""},{"path":"https://opasche.github.io/EQRN/reference/default_device.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default torch device — default_device","text":"","code":"device <- default_device()"},{"path":"https://opasche.github.io/EQRN/reference/end_doFuture_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"End the currently set doFuture strategy — end_doFuture_strategy","title":"End the currently set doFuture strategy — end_doFuture_strategy","text":"Resets default strategy using future::plan(\"default\").","code":""},{"path":"https://opasche.github.io/EQRN/reference/end_doFuture_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End the currently set doFuture strategy — end_doFuture_strategy","text":"","code":"end_doFuture_strategy()"},{"path":"https://opasche.github.io/EQRN/reference/end_doFuture_strategy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End the currently set doFuture strategy — end_doFuture_strategy","text":"","code":"if (FALSE) { `%fun%` <- set_doFuture_strategy(\"multisession\", n_workers=3) # perform foreach::foreach loop end_doFuture_strategy() }"},{"path":"https://opasche.github.io/EQRN/reference/EQRN-package.html","id":null,"dir":"Reference","previous_headings":"","what":"EQRN: Extreme Quantile Regression Neural Networks — EQRN-package","title":"EQRN: Extreme Quantile Regression Neural Networks — EQRN-package","text":"user-friendly framework forecasting extrapolating extreme measures conditional risk using flexible neural network architectures. allows capturing complex multivariate dependencies, including dependencies observations, sequential dependence (time-series).","code":""},{"path":[]},{"path":"https://opasche.github.io/EQRN/reference/EQRN_excess_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Tail excess probability prediction using an EQRN_iid object — EQRN_excess_probability","title":"Tail excess probability prediction using an EQRN_iid object — EQRN_excess_probability","text":"Tail excess probability prediction using EQRN_iid object","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_excess_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tail excess probability prediction using an EQRN_iid object — EQRN_excess_probability","text":"","code":"EQRN_excess_probability(   val,   fit_eqrn,   X,   intermediate_quantiles,   interm_lvl = fit_eqrn$interm_lvl,   body_proba = \"default\",   proba_type = c(\"excess\", \"cdf\"),   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_excess_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tail excess probability prediction using an EQRN_iid object — EQRN_excess_probability","text":"val Quantile value(s) used estimate conditional excess probability cdf. fit_eqrn Fitted \"EQRN_iid\" object. X Matrix covariates predict corresponding response's conditional excess probabilities. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. body_proba Value use predicted conditional probability interm_lvl (case precisely assessed model). \"default\" given (default), paste0(\">\",1-interm_lvl) used proba_type==\"excess\", paste0(\"<\",interm_lvl) used proba_type==\"cdf\". proba_type Whether return \"excess\" probability val (default) \"cdf\" val. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_excess_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tail excess probability prediction using an EQRN_iid object — EQRN_excess_probability","text":"Vector probabilities (possibly body_proba values val large enough) length nrow(X).","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_excess_probability_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Tail excess probability prediction using an EQRN_seq object — EQRN_excess_probability_seq","title":"Tail excess probability prediction using an EQRN_seq object — EQRN_excess_probability_seq","text":"Tail excess probability prediction using EQRN_seq object","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_excess_probability_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tail excess probability prediction using an EQRN_seq object — EQRN_excess_probability_seq","text":"","code":"EQRN_excess_probability_seq(   val,   fit_eqrn,   X,   Y,   intermediate_quantiles,   interm_lvl = fit_eqrn$interm_lvl,   crop_predictions = FALSE,   body_proba = \"default\",   proba_type = c(\"excess\", \"cdf\"),   seq_len = fit_eqrn$seq_len,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_excess_probability_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tail excess probability prediction using an EQRN_seq object — EQRN_excess_probability_seq","text":"val Quantile value(s) used estimate conditional excess probability cdf. fit_eqrn Fitted \"EQRN_seq\" object. X Matrix covariates predict response's conditional excess probabilities. Y Response variable vector corresponding rows X. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. crop_predictions Whether crop fist seq_len observations (NA) returned vector body_proba Value use predicted conditional probability interm_lvl (case precisely assessed model). \"default\" given (default), paste0(\">\",1-interm_lvl) used proba_type==\"excess\", paste0(\"<\",interm_lvl) used proba_type==\"cdf\". proba_type Whether return \"excess\" probability val (default) \"cdf\" val. seq_len Data sequence length (.e. number past observations) used predict response quantile. default, training fit_eqrn$seq_len used. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_excess_probability_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tail excess probability prediction using an EQRN_seq object — EQRN_excess_probability_seq","text":"Vector probabilities (possibly body_proba values val large enough) length nrow(X) (nrow(X)-seq_len crop_predictions).","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"EQRN fit function for independent data — EQRN_fit","title":"EQRN fit function for independent data — EQRN_fit","text":"Use EQRN_fit_restart() wrapper instead, data_type=\"iid\", better stability using fitting restart.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EQRN fit function for independent data — EQRN_fit","text":"","code":"EQRN_fit(   X,   y,   intermediate_quantiles,   interm_lvl,   shape_fixed = FALSE,   net_structure = c(5, 3, 3),   hidden_fct = torch::nnf_sigmoid,   p_drop = 0,   intermediate_q_feature = TRUE,   learning_rate = 1e-04,   L2_pen = 0,   shape_penalty = 0,   scale_features = TRUE,   n_epochs = 500,   batch_size = 256,   X_valid = NULL,   y_valid = NULL,   quant_valid = NULL,   lr_decay = 1,   patience_decay = n_epochs,   min_lr = 0,   patience_stop = n_epochs,   tol = 1e-06,   orthogonal_gpd = TRUE,   patience_lag = 1,   optim_met = \"adam\",   seed = NULL,   verbose = 2,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EQRN fit function for independent data — EQRN_fit","text":"X Matrix covariates, training. y Response variable vector model extreme conditional quantile , training. intermediate_quantiles Vector intermediate conditional quantiles level interm_lvl. interm_lvl Probability level intermediate quantiles intermediate_quantiles. shape_fixed Whether shape estimate depends covariates (bool). net_structure Vector integers whose length determines number layers neural network entries number neurons corresponding successive layer. hidden_fct==\"SSNN\", instead named list \"scale\" \"shape\" vectors two respective sub-networks. Can also torch::nn_module network correct input output dimensions, overrides hidden_fct, shape_fixed p_drop arguments. hidden_fct Activation function hidden layers. Can either callable function (preferably torch library), one strings \"SNN\", \"SSNN\" self normalizing networks (common separated networks scale shape estimates, respectively). latter cases, shape_fixed effect. p_drop Probability parameter dropout hidden layer regularization training. alpha-dropout used SNNs. intermediate_q_feature Whether use intermediate_quantiles additional covariate, appending X matrix (bool). learning_rate Initial learning rate optimizer training neural network. L2_pen L2 weight penalty parameter regularization training. shape_penalty Penalty parameter shape estimate, potentially regularize variation fixed prior estimate. scale_features Whether rescale input covariates zero mean unit variance applying network (recommended). n_epochs Number training epochs. batch_size Batch size used training. X_valid Covariates validation set, NULL. Used monitoring validation loss training, enabling learning-rate decay early stopping. y_valid Response variable validation set, NULL. Used monitoring validation loss training, enabling learning-rate decay early stopping. quant_valid Intermediate conditional quantiles level interm_lvl validation set, NULL. Used monitoring validation loss training, enabling learning-rate decay early stopping. lr_decay Learning rate decay factor. patience_decay Number epochs non-improving validation loss learning-rate decay performed. min_lr Minimum learning rate, decay performed. patience_stop Number epochs non-improving validation loss early stopping performed. tol Tolerance stopping training, case significant training loss improvements. orthogonal_gpd Whether use orthogonal reparametrization estimated GPD parameters (recommended). patience_lag validation loss considered non-improving larger previous patience_lag epochs. optim_met DEPRECATED. Optimization algorithm use training. \"adam\" default. seed Integer random seed reproducibility network weight initialization. verbose Amount information printed training (0:nothing, 1:important, 2:everything). device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EQRN fit function for independent data — EQRN_fit","text":"EQRN object classes c(\"EQRN_iid\", \"EQRN\"), containing fitted network, well relevant information usage functions.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit_restart.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for fitting EQRN with restart for stability — EQRN_fit_restart","title":"Wrapper for fitting EQRN with restart for stability — EQRN_fit_restart","text":"Wrapper fitting EQRN restart stability","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit_restart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for fitting EQRN with restart for stability — EQRN_fit_restart","text":"","code":"EQRN_fit_restart(   X,   y,   intermediate_quantiles,   interm_lvl,   number_fits = 3,   ...,   seed = NULL,   data_type = c(\"iid\", \"seq\") )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit_restart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for fitting EQRN with restart for stability — EQRN_fit_restart","text":"X Matrix covariates, training. y Response variable vector model extreme conditional quantile , training. intermediate_quantiles Vector intermediate conditional quantiles level interm_lvl. interm_lvl Probability level intermediate quantiles intermediate_quantiles. number_fits Number restarts. ... parameters given either EQRN_fit() EQRN_fit_seq(), depending data_type. seed Integer random seed reproducibility network weight initialization. data_type Type data dependence, must one \"iid\" (iid observations) \"seq\" (sequentially dependent observations).","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit_restart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for fitting EQRN with restart for stability — EQRN_fit_restart","text":"EQRN object classes c(\"EQRN_iid\", \"EQRN\") c(\"EQRN_seq\", \"EQRN\"), containing fitted network, well relevant information usage functions.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"EQRN fit function for sequential and time series data — EQRN_fit_seq","title":"EQRN fit function for sequential and time series data — EQRN_fit_seq","text":"Use EQRN_fit_restart() wrapper instead, data_type=\"seq\", better stability using fitting restart.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EQRN fit function for sequential and time series data — EQRN_fit_seq","text":"","code":"EQRN_fit_seq(   X,   y,   intermediate_quantiles,   interm_lvl,   shape_fixed = FALSE,   hidden_size = 10,   num_layers = 1,   rnn_type = c(\"lstm\", \"gru\"),   p_drop = 0,   intermediate_q_feature = TRUE,   learning_rate = 1e-04,   L2_pen = 0,   seq_len = 10,   shape_penalty = 0,   scale_features = TRUE,   n_epochs = 500,   batch_size = 256,   X_valid = NULL,   y_valid = NULL,   quant_valid = NULL,   lr_decay = 1,   patience_decay = n_epochs,   min_lr = 0,   patience_stop = n_epochs,   tol = 1e-05,   orthogonal_gpd = TRUE,   patience_lag = 1,   fold_separation = NULL,   optim_met = \"adam\",   seed = NULL,   verbose = 2,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EQRN fit function for sequential and time series data — EQRN_fit_seq","text":"X Matrix covariates, training. Entries must sequential order. y Response variable vector model extreme conditional quantile , training. Entries must sequential order. intermediate_quantiles Vector intermediate conditional quantiles level interm_lvl. interm_lvl Probability level intermediate quantiles intermediate_quantiles. shape_fixed Whether shape estimate depends covariates (bool). hidden_size Dimension hidden latent state variables recurrent network. num_layers Number recurrent layers. rnn_type Type recurrent architecture, can one \"lstm\" (default) \"gru\". p_drop Probability parameter dropout hidden layer regularization training. intermediate_q_feature Whether use intermediate_quantiles additional covariate, appending X matrix (bool). learning_rate Initial learning rate optimizer training neural network. L2_pen L2 weight penalty parameter regularization training. seq_len Data sequence length (.e. number past observations) used training predict response quantile. shape_penalty Penalty parameter shape estimate, potentially regularize variation fixed prior estimate. scale_features Whether rescale input covariates zero mean unit covariance applying network (recommended). n_epochs Number training epochs. batch_size Batch size used training. X_valid Covariates validation set, NULL. Entries must sequential order. Used monitoring validation loss training, enabling learning-rate decay early stopping. y_valid Response variable validation set, NULL. Entries must sequential order. Used monitoring validation loss training, enabling learning-rate decay early stopping. quant_valid Intermediate conditional quantiles level interm_lvl validation set, NULL. Used monitoring validation loss training, enabling learning-rate decay early stopping. lr_decay Learning rate decay factor. patience_decay Number epochs non-improving validation loss learning-rate decay performed. min_lr Minimum learning rate, decay performed. patience_stop Number epochs non-improving validation loss early stopping performed. tol Tolerance stopping training, case significant training loss improvements. orthogonal_gpd Whether use orthogonal reparametrization estimated GPD parameters (recommended). patience_lag validation loss considered non-improving larger previous patience_lag epochs. fold_separation Index fold separation sequential discontinuity data. optim_met DEPRECATED. Optimization algorithm use training. \"adam\" default. seed Integer random seed reproducibility network weight initialization. verbose Amount information printed training (0:nothing, 1:important, 2:everything). device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_fit_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EQRN fit function for sequential and time series data — EQRN_fit_seq","text":"EQRN object classes c(\"EQRN_seq\", \"EQRN\"), containing fitted network, well relevant information usage functions.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an EQRN object from disc — EQRN_load","title":"Load an EQRN object from disc — EQRN_load","text":"Loads memory \"EQRN\" object previously saved disc using EQRN_save().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an EQRN object from disc — EQRN_load","text":"","code":"EQRN_load(path, name = NULL, device = default_device(), ...)"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an EQRN object from disc — EQRN_load","text":"path Path save location string. name String name save. NULL (default), assumes save name given implicitly path. device (optional) torch::torch_device(). Defaults default_device(). ... DEPRECATED. Used back-compatibility.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an EQRN object from disc — EQRN_load","text":"loaded \"EQRN\" model.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict function for an EQRN_iid fitted object — EQRN_predict","title":"Predict function for an EQRN_iid fitted object — EQRN_predict","text":"Predict function EQRN_iid fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict function for an EQRN_iid fitted object — EQRN_predict","text":"","code":"EQRN_predict(   fit_eqrn,   X,   prob_lvls_predict,   intermediate_quantiles,   interm_lvl = fit_eqrn$interm_lvl,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict function for an EQRN_iid fitted object — EQRN_predict","text":"fit_eqrn Fitted \"EQRN_iid\" object. X Matrix covariates predict corresponding response's conditional quantiles. prob_lvls_predict Vector probability levels predict conditional quantiles. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict function for an EQRN_iid fitted object — EQRN_predict","text":"Matrix size nrow(X) times prob_lvls_predict containing conditional quantile estimates response associated covariate observation probability level. Simplifies vector length(prob_lvls_predict)==1.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal predict function for an EQRN_iid — EQRN_predict_internal","title":"Internal predict function for an EQRN_iid — EQRN_predict_internal","text":"Internal predict function EQRN_iid","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal predict function for an EQRN_iid — EQRN_predict_internal","text":"","code":"EQRN_predict_internal(   fit_eqrn,   X,   prob_lvl_predict,   intermediate_quantiles,   interm_lvl,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal predict function for an EQRN_iid — EQRN_predict_internal","text":"fit_eqrn Fitted \"EQRN_iid\" object. X Matrix covariates predict corresponding response's conditional quantiles. prob_lvl_predict Probability level predict conditional quantiles. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal predict function for an EQRN_iid — EQRN_predict_internal","text":"Vector length nrow(X) containing conditional quantile estimates response associated covariate observation probability level prob_lvl_predict.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_internal_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal predict function for an EQRN_seq fitted object — EQRN_predict_internal_seq","title":"Internal predict function for an EQRN_seq fitted object — EQRN_predict_internal_seq","text":"Internal predict function EQRN_seq fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_internal_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal predict function for an EQRN_seq fitted object — EQRN_predict_internal_seq","text":"","code":"EQRN_predict_internal_seq(   fit_eqrn,   X,   Y,   prob_lvl_predict,   intermediate_quantiles,   interm_lvl,   crop_predictions = FALSE,   seq_len = fit_eqrn$seq_len,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_internal_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal predict function for an EQRN_seq fitted object — EQRN_predict_internal_seq","text":"fit_eqrn Fitted \"EQRN_seq\" object. X Matrix covariates predict corresponding response's conditional quantiles. Y Response variable vector corresponding rows X. prob_lvl_predict Probability level predict conditional quantile. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. crop_predictions Whether crop fist seq_len observations (NA) returned vector seq_len Data sequence length (.e. number past observations) used predict response quantile. default, training fit_eqrn$seq_len used. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_internal_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal predict function for an EQRN_seq fitted object — EQRN_predict_internal_seq","text":"Vector length nrow(X) (nrow(X)-seq_len crop_predictions) containing conditional quantile estimates response associated covariate observation probability level.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_params.html","id":null,"dir":"Reference","previous_headings":"","what":"GPD parameters prediction function for an EQRN_iid fitted object — EQRN_predict_params","title":"GPD parameters prediction function for an EQRN_iid fitted object — EQRN_predict_params","text":"GPD parameters prediction function EQRN_iid fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPD parameters prediction function for an EQRN_iid fitted object — EQRN_predict_params","text":"","code":"EQRN_predict_params(   fit_eqrn,   X,   intermediate_quantiles = NULL,   return_parametrization = c(\"classical\", \"orthogonal\"),   interm_lvl = fit_eqrn$interm_lvl,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GPD parameters prediction function for an EQRN_iid fitted object — EQRN_predict_params","text":"fit_eqrn Fitted \"EQRN_iid\" object. X Matrix covariates predict conditional GPD parameters. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. return_parametrization parametrization return parameters , either \"classical\" \"orthogonal\". interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GPD parameters prediction function for an EQRN_iid fitted object — EQRN_predict_params","text":"Named list containing: \"scales\" \"shapes\" numerical vectors length nrow(X).","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_params_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"GPD parameters prediction function for an EQRN_seq fitted object — EQRN_predict_params_seq","title":"GPD parameters prediction function for an EQRN_seq fitted object — EQRN_predict_params_seq","text":"GPD parameters prediction function EQRN_seq fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_params_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPD parameters prediction function for an EQRN_seq fitted object — EQRN_predict_params_seq","text":"","code":"EQRN_predict_params_seq(   fit_eqrn,   X,   Y,   intermediate_quantiles = NULL,   return_parametrization = c(\"classical\", \"orthogonal\"),   interm_lvl = fit_eqrn$interm_lvl,   seq_len = fit_eqrn$seq_len,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_params_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GPD parameters prediction function for an EQRN_seq fitted object — EQRN_predict_params_seq","text":"fit_eqrn Fitted \"EQRN_seq\" object. X Matrix covariates predict conditional GPD parameters. Y Response variable vector corresponding rows X. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. return_parametrization parametrization return parameters , either \"classical\" \"orthogonal\". interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. seq_len Data sequence length (.e. number past observations) used predict response quantile. default, training fit_eqrn$seq_len used. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_params_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GPD parameters prediction function for an EQRN_seq fitted object — EQRN_predict_params_seq","text":"Named list containing: \"scales\" \"shapes\" numerical vectors length nrow(X), seq_len used.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict function for an EQRN_seq fitted object — EQRN_predict_seq","title":"Predict function for an EQRN_seq fitted object — EQRN_predict_seq","text":"Predict function EQRN_seq fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict function for an EQRN_seq fitted object — EQRN_predict_seq","text":"","code":"EQRN_predict_seq(   fit_eqrn,   X,   Y,   prob_lvls_predict,   intermediate_quantiles,   interm_lvl,   crop_predictions = FALSE,   seq_len = fit_eqrn$seq_len,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict function for an EQRN_seq fitted object — EQRN_predict_seq","text":"fit_eqrn Fitted \"EQRN_seq\" object. X Matrix covariates predict corresponding response's conditional quantiles. Y Response variable vector corresponding rows X. prob_lvls_predict Vector probability levels predict conditional quantiles. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. crop_predictions Whether crop fist seq_len observations (NA) returned matrix. seq_len Data sequence length (.e. number past observations) used predict response quantile. default, training fit_eqrn$seq_len used. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_predict_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict function for an EQRN_seq fitted object — EQRN_predict_seq","text":"Matrix size nrow(X) times prob_lvls_predict (nrow(X)-seq_len times prob_lvls_predict crop_predictions) containing conditional quantile estimates corresponding response observations probability level. Simplifies vector length(prob_lvls_predict)==1.","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an EQRN object on disc — EQRN_save","title":"Save an EQRN object on disc — EQRN_save","text":"Creates folder named name located path, containing binary save files, given \"EQRN\" object fit_eqrn can loaded back memory disc using EQRN_load().","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an EQRN object on disc — EQRN_save","text":"","code":"EQRN_save(fit_eqrn, path, name = NULL, no_warning = TRUE)"},{"path":"https://opasche.github.io/EQRN/reference/EQRN_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an EQRN object on disc — EQRN_save","text":"fit_eqrn \"EQRN\" object path Path save folder string. name String name save. no_warning Whether silence warning raised save folder needed beeing created (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/EQRN_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save an EQRN object on disc — EQRN_save","text":"Nothing","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_iid.html","id":null,"dir":"Reference","previous_headings":"","what":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_iid","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_iid","text":"Tail excess probability prediction method using EQRN_iid object","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_iid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_iid","text":"","code":"# S3 method for EQRN_iid excess_probability(object, ...)"},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_iid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_iid","text":"object Fitted \"EQRN_iid\" object. ... Arguments passed EQRN_excess_probability val Quantile value(s) used estimate conditional excess probability cdf. X Matrix covariates predict corresponding response's conditional excess probabilities. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. body_proba Value use predicted conditional probability interm_lvl (case precisely assessed model). \"default\" given (default), paste0(\">\",1-interm_lvl) used proba_type==\"excess\", paste0(\"<\",interm_lvl) used proba_type==\"cdf\". proba_type Whether return \"excess\" probability val (default) \"cdf\" val. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_iid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_iid","text":"Vector probabilities (possibly body_proba values val large enough) length nrow(X).","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_iid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_iid","text":"See EQRN_excess_probability() details.","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_seq","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_seq","text":"Tail excess probability prediction method using EQRN_iid object","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_seq","text":"","code":"# S3 method for EQRN_seq excess_probability(object, ...)"},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_seq","text":"object Fitted \"EQRN_seq\" object. ... Arguments passed EQRN_excess_probability_seq val Quantile value(s) used estimate conditional excess probability cdf. X Matrix covariates predict response's conditional excess probabilities. Y Response variable vector corresponding rows X. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. crop_predictions Whether crop fist seq_len observations (NA) returned vector body_proba Value use predicted conditional probability interm_lvl (case precisely assessed model). \"default\" given (default), paste0(\">\",1-interm_lvl) used proba_type==\"excess\", paste0(\"<\",interm_lvl) used proba_type==\"cdf\". proba_type Whether return \"excess\" probability val (default) \"cdf\" val. seq_len Data sequence length (.e. number past observations) used predict response quantile. default, training fit_eqrn$seq_len used. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_seq","text":"Vector probabilities (possibly body_proba values val large enough) length nrow(X) (nrow(X)-seq_len crop_predictions).","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.EQRN_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tail excess probability prediction method using an EQRN_iid object — excess_probability.EQRN_seq","text":"See EQRN_excess_probability_seq() details.","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Excess Probability Predictions — excess_probability","title":"Excess Probability Predictions — excess_probability","text":"generic function (method) excess probability predictions various fitted EQR models. function invokes particular methods depend class first argument.","code":""},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Excess Probability Predictions — excess_probability","text":"","code":"excess_probability(object, ...)"},{"path":"https://opasche.github.io/EQRN/reference/excess_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Excess Probability Predictions — excess_probability","text":"object model object excess probability prediction desired. ... additional model-specific arguments affecting predictions produced. See corresponding method documentation.","code":""},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_net.html","id":null,"dir":"Reference","previous_headings":"","what":"MLP module for GPD parameter prediction — FC_GPD_net","title":"MLP module for GPD parameter prediction — FC_GPD_net","text":"fully-connected network (multi-layer perception) torch::nn_module, designed generalized Pareto distribution parameter prediction.","code":""},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MLP module for GPD parameter prediction — FC_GPD_net","text":"","code":"FC_GPD_net(   D_in,   Hidden_vect = c(5, 5, 5),   activation = torch::nnf_sigmoid,   p_drop = 0,   shape_fixed = FALSE,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MLP module for GPD parameter prediction — FC_GPD_net","text":"D_in input size (.e. number features), Hidden_vect vector integers whose length determines number layers neural network entries number neurons corresponding successive layer, activation activation function hidden layers (either callable function, preferably torch library), p_drop probability parameter dropout hidden layer regularization training, shape_fixed whether shape estimate depends covariates (bool), device torch::torch_device() internal constant vector. Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MLP module for GPD parameter prediction — FC_GPD_net","text":"constructor allows specifying: D_inthe input size (.e. number features), Hidden_vecta vector integers whose length determines number layers neural network entries number neurons corresponding successive layer, activationthe activation function hidden layers (either callable function, preferably torch library), p_dropprobability parameter dropout hidden layer regularization training, shape_fixedwhether shape estimate depends covariates (bool), devicea torch::torch_device() internal constant vector. Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_SNN.html","id":null,"dir":"Reference","previous_headings":"","what":"Self-normalized fully-connected network module for GPD parameter prediction — FC_GPD_SNN","title":"Self-normalized fully-connected network module for GPD parameter prediction — FC_GPD_SNN","text":"fully-connected self-normalizing network (multi-layer perception) torch::nn_module, designed generalized Pareto distribution parameter prediction.","code":""},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_SNN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self-normalized fully-connected network module for GPD parameter prediction — FC_GPD_SNN","text":"","code":"FC_GPD_SNN(D_in, Hidden_vect = c(64, 64, 64), p_drop = 0.01)"},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_SNN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self-normalized fully-connected network module for GPD parameter prediction — FC_GPD_SNN","text":"D_in input size (.e. number features), Hidden_vect vector integers whose length determines number layers neural network entries number neurons corresponding successive layer, p_drop probability parameter alpha-dropout hidden layer regularization training.","code":""},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_SNN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Self-normalized fully-connected network module for GPD parameter prediction — FC_GPD_SNN","text":"constructor allows specifying: D_inthe input size (.e. number features), Hidden_vecta vector integers whose length determines number layers neural network entries number neurons corresponding successive layer, p_dropprobability parameter alpha-dropout hidden layer regularization training.","code":""},{"path":"https://opasche.github.io/EQRN/reference/FC_GPD_SNN.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Self-normalized fully-connected network module for GPD parameter prediction — FC_GPD_SNN","text":"Gunter Klambauer, Thomas Unterthiner, Andreas Mayr, Sepp Hochreiter. Self-Normalizing Neural Networks. Advances Neural Information Processing Systems 30 (NIPS 2017), 2017.","code":""},{"path":"https://opasche.github.io/EQRN/reference/fit_GPD_unconditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood estimates for the GPD distribution using peaks over threshold — fit_GPD_unconditional","title":"Maximum likelihood estimates for the GPD distribution using peaks over threshold — fit_GPD_unconditional","text":"Maximum likelihood estimates GPD distribution using peaks threshold","code":""},{"path":"https://opasche.github.io/EQRN/reference/fit_GPD_unconditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood estimates for the GPD distribution using peaks over threshold — fit_GPD_unconditional","text":"","code":"fit_GPD_unconditional(Y, interm_lvl = NULL, thresh_quantiles = NULL)"},{"path":"https://opasche.github.io/EQRN/reference/fit_GPD_unconditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood estimates for the GPD distribution using peaks over threshold — fit_GPD_unconditional","text":"Y Vector observations interm_lvl Probability level empirical quantile used threshold, thresh_quantiles given. thresh_quantiles Numerical value numerical vector length Y representing either fixed varying threshold, respectively.","code":""},{"path":"https://opasche.github.io/EQRN/reference/fit_GPD_unconditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood estimates for the GPD distribution using peaks over threshold — fit_GPD_unconditional","text":"Named list containing: scalethe GPD scale MLE, shapethe GPD shape MLE, fitthe fitted ismev::gpd.fit() object.","code":""},{"path":"https://opasche.github.io/EQRN/reference/fix_dimsimplif.html","id":null,"dir":"Reference","previous_headings":"","what":"(INTERNAL) Corrects a dimension simplification bug from the torch package — fix_dimsimplif","title":"(INTERNAL) Corrects a dimension simplification bug from the torch package — fix_dimsimplif","text":"(INTERNAL) Issue raised torch maintainers fixed, deprecating function.","code":""},{"path":"https://opasche.github.io/EQRN/reference/fix_dimsimplif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(INTERNAL) Corrects a dimension simplification bug from the torch package — fix_dimsimplif","text":"","code":"fix_dimsimplif(dl_i, ..., responses = TRUE)"},{"path":"https://opasche.github.io/EQRN/reference/fix_dimsimplif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(INTERNAL) Corrects a dimension simplification bug from the torch package — fix_dimsimplif","text":"dl_i batch object itteration torch::dataloader(). ... dimension(s) covariate object (excluding first \"batch\" dimension) responses Bolean indicating whether batch object dl_i covariates-response pair.","code":""},{"path":"https://opasche.github.io/EQRN/reference/fix_dimsimplif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(INTERNAL) Corrects a dimension simplification bug from the torch package — fix_dimsimplif","text":"fixed dl_i object","code":""},{"path":"https://opasche.github.io/EQRN/reference/get_doFuture_operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Get doFuture operator — get_doFuture_operator","title":"Get doFuture operator — get_doFuture_operator","text":"Get doFuture operator","code":""},{"path":"https://opasche.github.io/EQRN/reference/get_doFuture_operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get doFuture operator — get_doFuture_operator","text":"","code":"get_doFuture_operator(   strategy = c(\"sequential\", \"multisession\", \"multicore\", \"mixed\") )"},{"path":"https://opasche.github.io/EQRN/reference/get_doFuture_operator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get doFuture operator — get_doFuture_operator","text":"strategy One \"sequential\" (default), \"multisession\", \"multicore\", \"mixed\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/get_doFuture_operator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get doFuture operator — get_doFuture_operator","text":"Returns appropriate operator use foreach::foreach() loop. %% operator returned strategy==\"sequential\". Otherwise, %dopar% operator returned.","code":""},{"path":"https://opasche.github.io/EQRN/reference/get_doFuture_operator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get doFuture operator — get_doFuture_operator","text":"","code":"`%fun%` <- get_doFuture_operator(\"sequential\")"},{"path":"https://opasche.github.io/EQRN/reference/get_excesses.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes rescaled excesses over the conditional quantiles — get_excesses","title":"Computes rescaled excesses over the conditional quantiles — get_excesses","text":"Computes rescaled excesses conditional quantiles","code":""},{"path":"https://opasche.github.io/EQRN/reference/get_excesses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes rescaled excesses over the conditional quantiles — get_excesses","text":"","code":"get_excesses(   X = NULL,   y,   quantiles,   intermediate_q_feature = FALSE,   scale_features = FALSE,   X_scaling = NULL )"},{"path":"https://opasche.github.io/EQRN/reference/get_excesses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes rescaled excesses over the conditional quantiles — get_excesses","text":"X covariate matrix. Can NULL covariates. y response variable vector. quantiles intermediate quantiles compute excesses y. intermediate_q_feature Whether use intermediate quantiles additional covariate, appending X matrix (bool). scale_features Whether rescale input covariates zero mean unit variance applying network (recommended). X_scaling given, X_scaling$scaling overrides scale_features. X_scaling Existing \"X_scaling\" object containing precomputed mean variance covariate. enables reusing scaling choice parameters train set, computing excesses validation test set, order avoid overfitting. performed automatically \"EQRN\" objects.","code":""},{"path":"https://opasche.github.io/EQRN/reference/get_excesses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes rescaled excesses over the conditional quantiles — get_excesses","text":"Named list containing: Y_excessesthematrix response excesses, X_excessesthe (possibly rescaled q_feat transformed) covariate matrix, X_scalingobject class \"X_scaling\" use consistent scaling future datasets, excesses_ratioand ratio escesses troubleshooting.","code":""},{"path":"https://opasche.github.io/EQRN/reference/GPD_excess_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Tail excess probability prediction based on conditional GPD parameters — GPD_excess_probability","title":"Tail excess probability prediction based on conditional GPD parameters — GPD_excess_probability","text":"Tail excess probability prediction based conditional GPD parameters","code":""},{"path":"https://opasche.github.io/EQRN/reference/GPD_excess_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tail excess probability prediction based on conditional GPD parameters — GPD_excess_probability","text":"","code":"GPD_excess_probability(   val,   sigma,   xi,   interm_threshold,   threshold_p,   body_proba = \"default\",   proba_type = c(\"excess\", \"cdf\") )"},{"path":"https://opasche.github.io/EQRN/reference/GPD_excess_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tail excess probability prediction based on conditional GPD parameters — GPD_excess_probability","text":"val Quantile value(s) used estimate conditional excess probability cdf. sigma Value(s) GPD scale parameter. xi Value(s) GPD shape parameter. interm_threshold Intermediate (conditional) quantile(s) level threshold_p used (varying) threshold. threshold_p Probability level intermediate conditional quantiles interm_threshold. body_proba Value use predicted conditional probability threshold_p (case precisely assessed model). \"default\" given (default), paste0(\">\",1-threshold_p) used proba_type==\"excess\", paste0(\"<\",threshold_p) used proba_type==\"cdf\". proba_type Whether return \"excess\" probability val (default) \"cdf\" val.","code":""},{"path":"https://opasche.github.io/EQRN/reference/GPD_excess_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tail excess probability prediction based on conditional GPD parameters — GPD_excess_probability","text":"Vector probabilities (possibly body_proba values val large enough) length longest vector val, sigma, xi interm_threshold.","code":""},{"path":"https://opasche.github.io/EQRN/reference/GPD_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute extreme quantile from GPD parameters — GPD_quantiles","title":"Compute extreme quantile from GPD parameters — GPD_quantiles","text":"Compute extreme quantile GPD parameters","code":""},{"path":"https://opasche.github.io/EQRN/reference/GPD_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute extreme quantile from GPD parameters — GPD_quantiles","text":"","code":"GPD_quantiles(p, p0, t_x0, sigma, xi)"},{"path":"https://opasche.github.io/EQRN/reference/GPD_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute extreme quantile from GPD parameters — GPD_quantiles","text":"p Probability level desired extreme quantile. p0 Probability level (possibly varying) intermediate threshold/quantile. t_x0 Value(s) (possibly varying) intermediate threshold/quantile. sigma Value(s) GPD scale parameter. xi Value(s) GPD shape parameter.","code":""},{"path":"https://opasche.github.io/EQRN/reference/GPD_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute extreme quantile from GPD parameters — GPD_quantiles","text":"quantile value probability level p.","code":""},{"path":"https://opasche.github.io/EQRN/reference/install_backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Install Torch Backend — install_backend","title":"Install Torch Backend — install_backend","text":"function can called just installing EQRN package. installs necessary LibTorch backend calling torch::install_torch(). See https://torch.mlverse.org/docs/articles/installation.html details. Calling function necessary cases, loading EQRN (e.g. library(EQRN) EQRN::fct()) automatically (via .onLoad()).","code":""},{"path":"https://opasche.github.io/EQRN/reference/install_backend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install Torch Backend — install_backend","text":"","code":"install_backend(...)"},{"path":"https://opasche.github.io/EQRN/reference/install_backend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install Torch Backend — install_backend","text":"... Arguments passed torch::install_torch().","code":""},{"path":"https://opasche.github.io/EQRN/reference/install_backend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install Torch Backend — install_backend","text":"","code":"if (FALSE) { EQRN::install_backend() }"},{"path":"https://opasche.github.io/EQRN/reference/instantiate_EQRN_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Instantiates the default networks for training a EQRN_iid model — instantiate_EQRN_network","title":"Instantiates the default networks for training a EQRN_iid model — instantiate_EQRN_network","text":"Instantiates default networks training EQRN_iid model","code":""},{"path":"https://opasche.github.io/EQRN/reference/instantiate_EQRN_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instantiates the default networks for training a EQRN_iid model — instantiate_EQRN_network","text":"","code":"instantiate_EQRN_network(   net_structure,   shape_fixed,   D_in,   hidden_fct,   p_drop = 0,   orthogonal_gpd = TRUE,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/instantiate_EQRN_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instantiates the default networks for training a EQRN_iid model — instantiate_EQRN_network","text":"net_structure Vector integers whose length determines number layers neural network entries number neurons corresponding successive layer. shape_fixed Whether shape estimate depends covariates (bool). D_in Number covariates (including intermediate quantile feature used). hidden_fct Activation function hidden layers. Can either callable function (preferably torch library), one strings \"SNN\", \"SSNN\" self normalizing networks (common separated networks scale shape estimates, respectively). latter cases, shape_fixed effect. p_drop Probability parameter dropout hidden layer regularization training. alpha-dropout used SNNs. orthogonal_gpd Whether use orthogonal reparametrization estimated GPD parameters (recommended). device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/instantiate_EQRN_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Instantiates the default networks for training a EQRN_iid model — instantiate_EQRN_network","text":"torch::nn_module network used regress GPD parameters EQRN_fit().","code":""},{"path":"https://opasche.github.io/EQRN/reference/lagged_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate lagged replication for temporal dependence — lagged_features","title":"Covariate lagged replication for temporal dependence — lagged_features","text":"Covariate lagged replication temporal dependence","code":""},{"path":"https://opasche.github.io/EQRN/reference/lagged_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate lagged replication for temporal dependence — lagged_features","text":"","code":"lagged_features(X, max_lag, drop_present = TRUE)"},{"path":"https://opasche.github.io/EQRN/reference/lagged_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariate lagged replication for temporal dependence — lagged_features","text":"X Covariate matrix. max_lag Integer giving maximum lag (.e. number temporal dependence steps). drop_present Whether drop \"present\" features (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/lagged_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariate lagged replication for temporal dependence — lagged_features","text":"Matrix original columns replicated, shifted 1:max_lag drop_present==TRUE (default) 0:max_lag drop_present==FALSE.","code":""},{"path":"https://opasche.github.io/EQRN/reference/lagged_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariate lagged replication for temporal dependence — lagged_features","text":"","code":"lagged_features(matrix(seq(20), ncol=2), max_lag=3, drop_present=TRUE) #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]    3   13    2   12    1   11 #> [2,]    4   14    3   13    2   12 #> [3,]    5   15    4   14    3   13 #> [4,]    6   16    5   15    4   14 #> [5,]    7   17    6   16    5   15 #> [6,]    8   18    7   17    6   16 #> [7,]    9   19    8   18    7   17"},{"path":"https://opasche.github.io/EQRN/reference/last_elem.html","id":null,"dir":"Reference","previous_headings":"","what":"Last element of a vector — last_elem","title":"Last element of a vector — last_elem","text":"Returns last element given vector efficient way.","code":""},{"path":"https://opasche.github.io/EQRN/reference/last_elem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Last element of a vector — last_elem","text":"","code":"last_elem(x)"},{"path":"https://opasche.github.io/EQRN/reference/last_elem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Last element of a vector — last_elem","text":"x Vector.","code":""},{"path":"https://opasche.github.io/EQRN/reference/last_elem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Last element of a vector — last_elem","text":"last element vector x.","code":""},{"path":"https://opasche.github.io/EQRN/reference/last_elem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Last element of a vector — last_elem","text":"last element obtained using x[length(x)], done O(1) faster , example, Rcpp::mylast(x), tail(x, n=1), dplyr::last(x), x[end(x)[1]]], rev(x)[1].","code":""},{"path":"https://opasche.github.io/EQRN/reference/last_elem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Last element of a vector — last_elem","text":"","code":"last_elem(c(2, 6, 1, 4)) #> [1] 4"},{"path":"https://opasche.github.io/EQRN/reference/legacy_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal renaming function for back-compatibility — legacy_names","title":"Internal renaming function for back-compatibility — legacy_names","text":"Internal renaming function back-compatibility","code":""},{"path":"https://opasche.github.io/EQRN/reference/legacy_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal renaming function for back-compatibility — legacy_names","text":"","code":"legacy_names(eqrn_fit, classes = NULL)"},{"path":"https://opasche.github.io/EQRN/reference/legacy_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal renaming function for back-compatibility — legacy_names","text":"eqrn_fit EQRN fitted object. classes provided, overrides classes eqrn_fit.","code":""},{"path":"https://opasche.github.io/EQRN/reference/legacy_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal renaming function for back-compatibility — legacy_names","text":"eqrn_fit object updated attribute names classes.","code":""},{"path":"https://opasche.github.io/EQRN/reference/list2matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to a matrix — list2matrix","title":"Convert a list to a matrix — list2matrix","text":"Convert list matrix","code":""},{"path":"https://opasche.github.io/EQRN/reference/list2matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to a matrix — list2matrix","text":"","code":"list2matrix(lst, dim = c(\"row\", \"col\"))"},{"path":"https://opasche.github.io/EQRN/reference/list2matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to a matrix — list2matrix","text":"lst list. dim One \"row\" (default) \"col\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/list2matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list to a matrix — list2matrix","text":"list converted matrix, stacking elements lst rows columns matrix.","code":""},{"path":"https://opasche.github.io/EQRN/reference/list2matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list to a matrix — list2matrix","text":"","code":"#list2matrix(list(2, 7, 3, 8), \"row\")"},{"path":"https://opasche.github.io/EQRN/reference/loss_GPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Pareto likelihood loss — loss_GPD","title":"Generalized Pareto likelihood loss — loss_GPD","text":"Generalized Pareto likelihood loss","code":""},{"path":"https://opasche.github.io/EQRN/reference/loss_GPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Pareto likelihood loss — loss_GPD","text":"","code":"loss_GPD(   sigma,   xi,   y,   rescaled = TRUE,   interm_lvl = NULL,   return_vector = FALSE )"},{"path":"https://opasche.github.io/EQRN/reference/loss_GPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Pareto likelihood loss — loss_GPD","text":"sigma Value(s) GPD scale parameter. xi Value(s) GPD shape parameter. y Vector observations rescaled Whether y already vector excesses (TRUE) needs rescaling (FALSE). interm_lvl Probability level empirical quantile used intermediate threshold compute excesses, rescaled==FALSE. return_vector Whether return vector GPD losses observation instead negative log-likelihood (average loss).","code":""},{"path":"https://opasche.github.io/EQRN/reference/loss_GPD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Pareto likelihood loss — loss_GPD","text":"GPD negative log-likelihood GPD parameters sample observations","code":""},{"path":"https://opasche.github.io/EQRN/reference/loss_GPD_tensor.html","id":null,"dir":"Reference","previous_headings":"","what":"GPD tensor loss function for training a EQRN network — loss_GPD_tensor","title":"GPD tensor loss function for training a EQRN network — loss_GPD_tensor","text":"GPD tensor loss function training EQRN network","code":""},{"path":"https://opasche.github.io/EQRN/reference/loss_GPD_tensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPD tensor loss function for training a EQRN network — loss_GPD_tensor","text":"","code":"loss_GPD_tensor(   out,   y,   orthogonal_gpd = TRUE,   shape_penalty = 0,   prior_shape = NULL,   return_agg = c(\"mean\", \"sum\", \"vector\", \"nanmean\", \"nansum\") )"},{"path":"https://opasche.github.io/EQRN/reference/loss_GPD_tensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GPD tensor loss function for training a EQRN network — loss_GPD_tensor","text":"Batch tensor GPD parameters output network. y Batch tensor corresponding response variable. orthogonal_gpd Whether network supposed regress orthogonal reparametrization GPD parameters (recommended). shape_penalty Penalty parameter shape estimate, potentially regularize variation fixed prior estimate. prior_shape Prior estimate shape, used shape_penalty>0. return_agg return aggregation computed loss batch. Must one \"mean\", \"sum\", \"vector\", \"nanmean\", \"nansum\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/loss_GPD_tensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GPD tensor loss function for training a EQRN network — loss_GPD_tensor","text":"GPD loss batch network output ans observed responses torch::Tensor, whose dimensions depend return_agg.","code":""},{"path":"https://opasche.github.io/EQRN/reference/make_folds.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cross-validation folds — make_folds","title":"Create cross-validation folds — make_folds","text":"Utility function create folds data, used cross-validation proceidures. implementation gbex R package","code":""},{"path":"https://opasche.github.io/EQRN/reference/make_folds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cross-validation folds — make_folds","text":"","code":"make_folds(y, num_folds, stratified = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/make_folds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cross-validation folds — make_folds","text":"y Numerical vector observations num_folds Number folds create. stratified Logical value. TRUE, folds stratified along rank(y).","code":""},{"path":"https://opasche.github.io/EQRN/reference/make_folds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cross-validation folds — make_folds","text":"Vector indices assigned folds observation.","code":""},{"path":"https://opasche.github.io/EQRN/reference/make_folds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create cross-validation folds — make_folds","text":"","code":"make_folds(rnorm(30), 5) #>  [1] 3 5 4 5 5 4 3 3 1 2 3 2 5 1 5 3 1 1 1 5 2 2 4 1 4 3 4 2 2 4"},{"path":"https://opasche.github.io/EQRN/reference/matrix2list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a matrix to a list — matrix2list","title":"Convert a matrix to a list — matrix2list","text":"Convert matrix list","code":""},{"path":"https://opasche.github.io/EQRN/reference/matrix2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a matrix to a list — matrix2list","text":"","code":"matrix2list(mat)"},{"path":"https://opasche.github.io/EQRN/reference/matrix2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a matrix to a list — matrix2list","text":"mat matrix.","code":""},{"path":"https://opasche.github.io/EQRN/reference/matrix2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a matrix to a list — matrix2list","text":"list elements corresponding rows mat.","code":""},{"path":"https://opasche.github.io/EQRN/reference/matrix2list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a matrix to a list — matrix2list","text":"","code":"#matrix2list(matrix(c(1, 2, 3, 4, 5, 6), ncol=2))"},{"path":"https://opasche.github.io/EQRN/reference/mean_absolute_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean absolute error — mean_absolute_error","title":"Mean absolute error — mean_absolute_error","text":"Mean absolute error","code":""},{"path":"https://opasche.github.io/EQRN/reference/mean_absolute_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean absolute error — mean_absolute_error","text":"","code":"mean_absolute_error(   y,   y_hat,   return_agg = c(\"mean\", \"sum\", \"vector\"),   na.rm = FALSE )"},{"path":"https://opasche.github.io/EQRN/reference/mean_absolute_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean absolute error — mean_absolute_error","text":"y Vector observations ground-truths. y_hat Vector predictions. return_agg Whether return \"mean\" (default), \"sum\", \"vector\" errors. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/mean_absolute_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean absolute error — mean_absolute_error","text":"mean (total vectorial) absolute error y y_hat.","code":""},{"path":"https://opasche.github.io/EQRN/reference/mean_absolute_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean absolute error — mean_absolute_error","text":"","code":"mean_absolute_error(c(2.3, 4.2, 1.8), c(2.2, 4.6, 1.7)) #> [1] 0.2"},{"path":"https://opasche.github.io/EQRN/reference/mean_squared_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean squared error — mean_squared_error","title":"Mean squared error — mean_squared_error","text":"Mean squared error","code":""},{"path":"https://opasche.github.io/EQRN/reference/mean_squared_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean squared error — mean_squared_error","text":"","code":"mean_squared_error(   y,   y_hat,   return_agg = c(\"mean\", \"sum\", \"vector\"),   na.rm = FALSE )"},{"path":"https://opasche.github.io/EQRN/reference/mean_squared_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean squared error — mean_squared_error","text":"y Vector observations ground-truths. y_hat Vector predictions. return_agg Whether return \"mean\" (default), \"sum\", \"vector\" errors. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/mean_squared_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean squared error — mean_squared_error","text":"mean (total vectorial) squared error y y_hat.","code":""},{"path":"https://opasche.github.io/EQRN/reference/mean_squared_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean squared error — mean_squared_error","text":"","code":"mean_squared_error(c(2.3, 4.2, 1.8), c(2.2, 4.6, 1.7)) #> [1] 0.06"},{"path":"https://opasche.github.io/EQRN/reference/mts_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset creator for sequential data — mts_dataset","title":"Dataset creator for sequential data — mts_dataset","text":"torch::dataset object can initialized sequential data, used feed recurrent network training prediction. used EQRN_fit_seq() corresponding predict functions, well recurrent methods QRN_seq_fit() predict functions. Can perform scaling response's past covariate, compute excesses response used EQRN_fit_seq(). Also allows fold separation sequential discontinuity data.","code":""},{"path":"https://opasche.github.io/EQRN/reference/mts_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset creator for sequential data — mts_dataset","text":"","code":"mts_dataset(   Y,   X,   seq_len,   intermediate_quantiles = NULL,   scale_Y = TRUE,   fold_separation = NULL,   sample_frac = 1,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/mts_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset creator for sequential data — mts_dataset","text":"Y Response variable vector model extreme conditional quantile , training. Entries must sequential order. X Matrix covariates, training. Entries must sequential order. seq_len Data sequence length (.e. number past observations) used training predict response quantile. intermediate_quantiles Vector intermediate conditional quantiles level interm_lvl. scale_Y Whether rescale response past, considered input covariate, zero mean unit covariance applying network (recommended). fold_separation Fold separation index, using concatenated folds data. sample_frac Value 0 1. sample_frac < 1, subsample data used. Defaults 1. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_exceedance_proba_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel 'quantile_exceedance_proba_error' — multilevel_exceedance_proba_error","title":"Multilevel 'quantile_exceedance_proba_error' — multilevel_exceedance_proba_error","text":"Multilevel version quantile_exceedance_proba_error().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_exceedance_proba_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel 'quantile_exceedance_proba_error' — multilevel_exceedance_proba_error","text":"","code":"multilevel_exceedance_proba_error(   Probs,   proba_levels = NULL,   return_years = NULL,   type_probs = c(\"cdf\", \"exceedance\"),   prefix = \"\",   na.rm = FALSE,   give_names = TRUE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_exceedance_proba_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel 'quantile_exceedance_proba_error' — multilevel_exceedance_proba_error","text":"Probs Matrix, whose columns give, proba_levels, predicted probabilities exceed smaller fixed quantile. proba_levels Vector probability levels quantiles. return_years probability levels can given term return years instead. used proba_levels given. type_probs Whether predictions \"cdf\" (default) \"exceedance\" probabilities. prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output errors (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_exceedance_proba_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel 'quantile_exceedance_proba_error' — multilevel_exceedance_proba_error","text":"vector length length(proba_levels) giving quantile_exceedance_proba_error() calibration metric column Probs corresponding proba_levels. give_names TRUE, output vector named paste0(prefix, \"exPrErr_q\", proba_levels) (paste0(prefix, \"exPrErr_\", return_years,\"y\") return_years given instead proba_levels).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_MAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel quantile MAEs — multilevel_MAE","title":"Multilevel quantile MAEs — multilevel_MAE","text":"Multilevel version mean_absolute_error().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_MAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel quantile MAEs — multilevel_MAE","text":"","code":"multilevel_MAE(   True_Q,   Pred_Q,   proba_levels,   prefix = \"\",   na.rm = FALSE,   give_names = TRUE,   sd = FALSE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_MAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel quantile MAEs — multilevel_MAE","text":"True_Q Matrix size n_obs times proba_levels, whose columns vectors ground-truths proba_levels row corresponds observation realisation. Pred_Q Matrix size True_Q, whose columns predictions proba_levels row corresponds observation realisation. proba_levels Vector probability levels predictions made. Must length ncol(Pred_Q). prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output MAEs (bool). sd Whether return absolute error standard deviation (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_MAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel quantile MAEs — multilevel_MAE","text":"vector length length(proba_levels) giving mean absolute errors respective columns True_Q Pred_Q. give_names TRUE, output vector named paste0(prefix, \"MAE_q\", proba_levels). sd==TRUE named list instead returned, containing \"MAEs\" described \"SDs\", standard deviations.","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_MSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel quantile MSEs — multilevel_MSE","title":"Multilevel quantile MSEs — multilevel_MSE","text":"Multilevel version mean_squared_error().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_MSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel quantile MSEs — multilevel_MSE","text":"","code":"multilevel_MSE(   True_Q,   Pred_Q,   proba_levels,   prefix = \"\",   na.rm = FALSE,   give_names = TRUE,   sd = FALSE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_MSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel quantile MSEs — multilevel_MSE","text":"True_Q Matrix size n_obs times proba_levels, whose columns vectors ground-truths proba_levels row corresponds observation realisation. Pred_Q Matrix size True_Q, whose columns predictions proba_levels row corresponds observation realisation. proba_levels Vector probability levels predictions made. Must length ncol(Pred_Q). prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output MSEs (bool). sd Whether return squared error standard deviation (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_MSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel quantile MSEs — multilevel_MSE","text":"vector length length(proba_levels) giving mean square errors respective columns True_Q Pred_Q. give_names TRUE, output vector named paste0(prefix, \"MSE_q\", proba_levels). sd==TRUE named list instead returned, containing \"MSEs\" described \"SDs\", standard deviations.","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_pred_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel prediction bias — multilevel_pred_bias","title":"Multilevel prediction bias — multilevel_pred_bias","text":"Multilevel version prediction_bias().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_pred_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel prediction bias — multilevel_pred_bias","text":"","code":"multilevel_pred_bias(   True_Q,   Pred_Q,   proba_levels,   square_bias = FALSE,   prefix = \"\",   na.rm = FALSE,   give_names = TRUE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_pred_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel prediction bias — multilevel_pred_bias","text":"True_Q Matrix size n_obs times proba_levels, whose columns vectors ground-truths proba_levels row corresponds observation realisation. Pred_Q Matrix size True_Q, whose columns predictions proba_levels row corresponds observation realisation. proba_levels Vector probability levels predictions made. Must length ncol(Pred_Q). square_bias Whether return square bias (bool); defaults FALSE. prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output MSEs (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_pred_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel prediction bias — multilevel_pred_bias","text":"vector length length(proba_levels) giving (square) bias columns predictions Pred_Q respective True_Q. give_names TRUE, output vector named paste0(prefix, \"MSE_q\", proba_levels).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_prop_below.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel 'proportion_below' — multilevel_prop_below","title":"Multilevel 'proportion_below' — multilevel_prop_below","text":"Multilevel version proportion_below().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_prop_below.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel 'proportion_below' — multilevel_prop_below","text":"","code":"multilevel_prop_below(   y,   Pred_Q,   proba_levels,   prefix = \"\",   na.rm = FALSE,   give_names = TRUE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_prop_below.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel 'proportion_below' — multilevel_prop_below","text":"y Vector observations. Pred_Q Matrix size length(y) times proba_levels, whose columns quantile predictions proba_levels row corresponds observation realisation. proba_levels Vector probability levels predictions made. Must length ncol(Pred_Q). prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output proportions (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_prop_below.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel 'proportion_below' — multilevel_prop_below","text":"vector length length(proba_levels) giving proportion observations predictions (Pred_Q) probability level. give_names TRUE, output vector named paste0(prefix, \"propBelow_q\", proba_levels).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_q_loss.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel quantile losses — multilevel_q_loss","title":"Multilevel quantile losses — multilevel_q_loss","text":"Multilevel version quantile_loss().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_q_loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel quantile losses — multilevel_q_loss","text":"","code":"multilevel_q_loss(   y,   Pred_Q,   proba_levels,   prefix = \"\",   na.rm = FALSE,   give_names = TRUE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_q_loss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel quantile losses — multilevel_q_loss","text":"y Vector observations. Pred_Q Matrix size length(y) times proba_levels, whose columns quantile predictions proba_levels row corresponds observation realisation. proba_levels Vector probability levels predictions made. Must length ncol(Pred_Q). prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output quantile errors (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_q_loss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel quantile losses — multilevel_q_loss","text":"vector length length(proba_levels) giving average quantile losses column Pred_Q observations. give_names TRUE, output vector named paste0(prefix, \"qloss_q\", proba_levels).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_q_pred_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel 'quantile_prediction_error' — multilevel_q_pred_error","title":"Multilevel 'quantile_prediction_error' — multilevel_q_pred_error","text":"Multilevel version quantile_prediction_error().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_q_pred_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel 'quantile_prediction_error' — multilevel_q_pred_error","text":"","code":"multilevel_q_pred_error(   y,   Pred_Q,   proba_levels,   prefix = \"\",   na.rm = FALSE,   give_names = TRUE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_q_pred_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel 'quantile_prediction_error' — multilevel_q_pred_error","text":"y Vector observations. Pred_Q Matrix size length(y) times proba_levels, whose columns quantile predictions proba_levels row corresponds observation realisation. proba_levels Vector probability levels predictions made. Must length ncol(Pred_Q). prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output errors (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_q_pred_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel 'quantile_prediction_error' — multilevel_q_pred_error","text":"vector length length(proba_levels) giving quantile prediction error calibration metrics column Pred_Q observations. give_names TRUE, output vector named paste0(prefix, \"qPredErr_q\", proba_levels).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_resid_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel residual variance — multilevel_resid_var","title":"Multilevel residual variance — multilevel_resid_var","text":"Multilevel version prediction_residual_variance().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_resid_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel residual variance — multilevel_resid_var","text":"","code":"multilevel_resid_var(   True_Q,   Pred_Q,   proba_levels,   prefix = \"\",   na.rm = FALSE,   give_names = TRUE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_resid_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel residual variance — multilevel_resid_var","text":"True_Q Matrix size n_obs times proba_levels, whose columns vectors ground-truths proba_levels row corresponds observation realisation. Pred_Q Matrix size True_Q, whose columns predictions proba_levels row corresponds observation realisation. proba_levels Vector probability levels predictions made. Must length ncol(Pred_Q). prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output MSEs (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_resid_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel residual variance — multilevel_resid_var","text":"vector length length(proba_levels) giving residual variances columns predictions Pred_Q respective True_Q. give_names TRUE, output vector named paste0(prefix, \"MSE_q\", proba_levels).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_R_squared.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel R squared — multilevel_R_squared","title":"Multilevel R squared — multilevel_R_squared","text":"Multilevel version R_squared().","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_R_squared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel R squared — multilevel_R_squared","text":"","code":"multilevel_R_squared(   True_Q,   Pred_Q,   proba_levels,   prefix = \"\",   na.rm = FALSE,   give_names = TRUE )"},{"path":"https://opasche.github.io/EQRN/reference/multilevel_R_squared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel R squared — multilevel_R_squared","text":"True_Q Matrix size n_obs times proba_levels, whose columns vectors ground-truths proba_levels row corresponds observation realisation. Pred_Q Matrix size True_Q, whose columns predictions proba_levels row corresponds observation realisation. proba_levels Vector probability levels predictions made. Must length ncol(Pred_Q). prefix string prefix add output's names (give_names TRUE). na.rm logical value indicating whether NA values stripped computation proceeds. give_names Whether name output MSEs (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/multilevel_R_squared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel R squared — multilevel_R_squared","text":"vector length length(proba_levels) giving R squared coefficient determination columns predictions Pred_Q respective True_Q. give_names TRUE, output vector named paste0(prefix, \"MSE_q\", proba_levels).","code":""},{"path":"https://opasche.github.io/EQRN/reference/nn_alpha_dropout.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha-dropout module — nn_alpha_dropout","title":"Alpha-dropout module — nn_alpha_dropout","text":"alpha-dropout layer torch::nn_module, used self-normalizing networks.","code":""},{"path":"https://opasche.github.io/EQRN/reference/nn_alpha_dropout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha-dropout module — nn_alpha_dropout","text":"","code":"nn_alpha_dropout(p = 0.5, inplace = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/nn_alpha_dropout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha-dropout module — nn_alpha_dropout","text":"p probability dropout. inplace whether dropout performed inplace.","code":""},{"path":"https://opasche.github.io/EQRN/reference/nn_alpha_dropout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alpha-dropout module — nn_alpha_dropout","text":"constructor allows specifying: pprobability element zeroed (default 0.5), inplaceif set TRUE, operation -place (default FALSE).","code":""},{"path":"https://opasche.github.io/EQRN/reference/nn_alpha_dropout.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Alpha-dropout module — nn_alpha_dropout","text":"Gunter Klambauer, Thomas Unterthiner, Andreas Mayr, Sepp Hochreiter. Self-Normalizing Neural Networks. Advances Neural Information Processing Systems 30 (NIPS 2017), 2017.","code":""},{"path":"https://opasche.github.io/EQRN/reference/nn_dropout_nd.html","id":null,"dir":"Reference","previous_headings":"","what":"Dropout module — nn_dropout_nd","title":"Dropout module — nn_dropout_nd","text":"dropout layer torch::nn_module.","code":""},{"path":"https://opasche.github.io/EQRN/reference/nn_dropout_nd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dropout module — nn_dropout_nd","text":"","code":"nn_dropout_nd(p = 0.5, inplace = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/nn_dropout_nd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dropout module — nn_dropout_nd","text":"p probability dropout. inplace whether dropout performed inplace.","code":""},{"path":"https://opasche.github.io/EQRN/reference/nn_dropout_nd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dropout module — nn_dropout_nd","text":"constructor allows specifying: pprobability element zeroed (default 0.5), inplaceif set TRUE, operation -place (default FALSE).","code":""},{"path":"https://opasche.github.io/EQRN/reference/onload_backend_installer.html","id":null,"dir":"Reference","previous_headings":"","what":"On-Load Torch Backend Internal Install helper — onload_backend_installer","title":"On-Load Torch Backend Internal Install helper — onload_backend_installer","text":"-Load Torch Backend Internal Install helper","code":""},{"path":"https://opasche.github.io/EQRN/reference/onload_backend_installer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"On-Load Torch Backend Internal Install helper — onload_backend_installer","text":"","code":"onload_backend_installer(...)"},{"path":"https://opasche.github.io/EQRN/reference/onload_backend_installer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"On-Load Torch Backend Internal Install helper — onload_backend_installer","text":"... Arguments passed torch::install_torch().","code":""},{"path":"https://opasche.github.io/EQRN/reference/perform_scaling.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs feature scaling without overfitting — perform_scaling","title":"Performs feature scaling without overfitting — perform_scaling","text":"Performs feature scaling without overfitting","code":""},{"path":"https://opasche.github.io/EQRN/reference/perform_scaling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs feature scaling without overfitting — perform_scaling","text":"","code":"perform_scaling(X, X_scaling = NULL, scale_features = TRUE, stat_attr = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/perform_scaling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs feature scaling without overfitting — perform_scaling","text":"X covariate matrix. X_scaling Existing \"X_scaling\" object containing precomputed mean variance covariate. enables reusing scaling choice parameters train set, computing excesses validation test set, order avoid overfitting. performed automatically \"EQRN\" objects. scale_features Whether rescale input covariates zero mean unit variance applying model (recommended). X_scaling given, X_scaling$scaling overrides scale_features. stat_attr DEPRECATED. Whether keep attributes returned covariate matrix .","code":""},{"path":"https://opasche.github.io/EQRN/reference/perform_scaling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs feature scaling without overfitting — perform_scaling","text":"Named list containing: X_excessesthe (possibly rescaled q_feat transformed) covariate matrix, X_scalingobject class \"X_scaling\" use consistent scaling future datasets.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_iid.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for an EQRN_iid fitted object — predict.EQRN_iid","title":"Predict method for an EQRN_iid fitted object — predict.EQRN_iid","text":"Predict method EQRN_iid fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_iid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for an EQRN_iid fitted object — predict.EQRN_iid","text":"","code":"# S3 method for EQRN_iid predict(object, ...)"},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_iid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for an EQRN_iid fitted object — predict.EQRN_iid","text":"object Fitted \"EQRN_iid\" object. ... Arguments passed EQRN_predict X Matrix covariates predict corresponding response's conditional quantiles. prob_lvls_predict Vector probability levels predict conditional quantiles. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_iid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for an EQRN_iid fitted object — predict.EQRN_iid","text":"Matrix size nrow(X) times prob_lvls_predict containing conditional quantile estimates response associated covariate observation probability level. Simplifies vector length(prob_lvls_predict)==1.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_iid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict method for an EQRN_iid fitted object — predict.EQRN_iid","text":"See EQRN_predict() details.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for an EQRN_seq fitted object — predict.EQRN_seq","title":"Predict method for an EQRN_seq fitted object — predict.EQRN_seq","text":"Predict method EQRN_seq fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for an EQRN_seq fitted object — predict.EQRN_seq","text":"","code":"# S3 method for EQRN_seq predict(object, ...)"},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for an EQRN_seq fitted object — predict.EQRN_seq","text":"object Fitted \"EQRN_seq\" object. ... Arguments passed EQRN_predict_seq X Matrix covariates predict corresponding response's conditional quantiles. Y Response variable vector corresponding rows X. prob_lvls_predict Vector probability levels predict conditional quantiles. intermediate_quantiles Vector intermediate conditional quantiles level fit_eqrn$interm_lvl. interm_lvl Optional, checks interm_lvl == fit_eqrn$interm_lvl. crop_predictions Whether crop fist seq_len observations (NA) returned matrix. seq_len Data sequence length (.e. number past observations) used predict response quantile. default, training fit_eqrn$seq_len used. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for an EQRN_seq fitted object — predict.EQRN_seq","text":"Matrix size nrow(X) times prob_lvls_predict (nrow(X)-seq_len times prob_lvls_predict crop_predictions) containing conditional quantile estimates corresponding response observations probability level. Simplifies vector length(prob_lvls_predict)==1.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.EQRN_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict method for an EQRN_seq fitted object — predict.EQRN_seq","text":"See EQRN_predict_seq() details.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.QRN_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for a QRN_seq fitted object — predict.QRN_seq","title":"Predict method for a QRN_seq fitted object — predict.QRN_seq","text":"Predict method QRN_seq fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.QRN_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for a QRN_seq fitted object — predict.QRN_seq","text":"","code":"# S3 method for QRN_seq predict(object, ...)"},{"path":"https://opasche.github.io/EQRN/reference/predict.QRN_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for a QRN_seq fitted object — predict.QRN_seq","text":"object Fitted \"QRN_seq\" object. ... Arguments passed QRN_seq_predict X Matrix covariates predict corresponding response's conditional quantiles. Y Response variable vector corresponding rows X. q_level Optional, checks q_level == fit_qrn_ts$interm_lvl. crop_predictions Whether crop fist seq_len observations (NA) returned matrix. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.QRN_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for a QRN_seq fitted object — predict.QRN_seq","text":"Matrix size nrow(X) times 1 (nrow(X)-seq_len times 1 crop_predictions) containing conditional quantile estimates corresponding response observations.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict.QRN_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict method for a QRN_seq fitted object — predict.QRN_seq","text":"See QRN_seq_predict() details.","code":""},{"path":"https://opasche.github.io/EQRN/reference/prediction_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction bias — prediction_bias","title":"Prediction bias — prediction_bias","text":"Prediction bias","code":""},{"path":"https://opasche.github.io/EQRN/reference/prediction_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction bias — prediction_bias","text":"","code":"prediction_bias(y, y_hat, square_bias = FALSE, na.rm = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/prediction_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction bias — prediction_bias","text":"y Vector observations ground-truths. y_hat Vector predictions. square_bias Whether return square bias (bool); defaults FALSE. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/prediction_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction bias — prediction_bias","text":"(square) bias predictions y_hat y.","code":""},{"path":"https://opasche.github.io/EQRN/reference/prediction_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction bias — prediction_bias","text":"","code":"prediction_bias(c(2.3, 4.2, 1.8), c(2.2, 4.6, 1.7)) #> [1] 0.06666667"},{"path":"https://opasche.github.io/EQRN/reference/prediction_residual_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction residual variance — prediction_residual_variance","title":"Prediction residual variance — prediction_residual_variance","text":"Prediction residual variance","code":""},{"path":"https://opasche.github.io/EQRN/reference/prediction_residual_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction residual variance — prediction_residual_variance","text":"","code":"prediction_residual_variance(y, y_hat, na.rm = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/prediction_residual_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction residual variance — prediction_residual_variance","text":"y Vector observations ground-truths. y_hat Vector predictions. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/prediction_residual_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction residual variance — prediction_residual_variance","text":"residual variance predictions y_hat y.","code":""},{"path":"https://opasche.github.io/EQRN/reference/prediction_residual_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction residual variance — prediction_residual_variance","text":"","code":"prediction_residual_variance(c(2.3, 4.2, 1.8), c(2.2, 4.6, 1.7)) #> [1] 0.08333333"},{"path":"https://opasche.github.io/EQRN/reference/predict_GPD_semiconditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict semi-conditional extreme quantiles using peaks over threshold — predict_GPD_semiconditional","title":"Predict semi-conditional extreme quantiles using peaks over threshold — predict_GPD_semiconditional","text":"Predict semi-conditional extreme quantiles using peaks threshold","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict_GPD_semiconditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict semi-conditional extreme quantiles using peaks over threshold — predict_GPD_semiconditional","text":"","code":"predict_GPD_semiconditional(   Y,   interm_lvl,   thresh_quantiles,   interm_quantiles_test = thresh_quantiles,   prob_lvls_predict = c(0.99) )"},{"path":"https://opasche.github.io/EQRN/reference/predict_GPD_semiconditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict semi-conditional extreme quantiles using peaks over threshold — predict_GPD_semiconditional","text":"Y Vector (\"training\") observations. interm_lvl Probability level empirical quantile used intermediate threshold. thresh_quantiles Numerical vector length Y representing varying intermediate threshold train set. interm_quantiles_test Numerical vector length Y representing varying intermediate threshold used prediction test set. prob_lvls_predict Probability levels predict extreme semi-conditional quantiles.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict_GPD_semiconditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict semi-conditional extreme quantiles using peaks over threshold — predict_GPD_semiconditional","text":"Named list containing: predictionsmatrix dimension length(interm_quantiles_test) times length(prob_lvls_predict) containing estimated extreme quantile levels quantile, interm_quantiles_test, parsmatrix dimension ntest times 2 containing two GPD parameter MLEs, repeated length(interm_quantiles_test) times.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict_unconditional_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict unconditional extreme quantiles using peaks over threshold — predict_unconditional_quantiles","title":"Predict unconditional extreme quantiles using peaks over threshold — predict_unconditional_quantiles","text":"Predict unconditional extreme quantiles using peaks threshold","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict_unconditional_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict unconditional extreme quantiles using peaks over threshold — predict_unconditional_quantiles","text":"","code":"predict_unconditional_quantiles(interm_lvl, quantiles = c(0.99), Y, ntest = 1)"},{"path":"https://opasche.github.io/EQRN/reference/predict_unconditional_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict unconditional extreme quantiles using peaks over threshold — predict_unconditional_quantiles","text":"interm_lvl Probability level empirical quantile used intermediate threshold. quantiles Probability levels predict extreme quantiles. Y Vector (\"training\") observations. ntest Number \"test\" observations.","code":""},{"path":"https://opasche.github.io/EQRN/reference/predict_unconditional_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict unconditional extreme quantiles using peaks over threshold — predict_unconditional_quantiles","text":"Named list containing: predictionsmatrix dimension ntest times length(quantiles) containing estimated extreme quantile levels quantile, repeated ntest times, parsmatrix dimension ntest times 2 containing two GPD parameter MLEs, repeated ntest times. thresholdThe threshold peaks--threshold GPD model. empirical quantile Y level interm_lvl, .e. stats::quantile(Y, interm_lvl).","code":""},{"path":"https://opasche.github.io/EQRN/reference/process_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature processor for EQRN — process_features","title":"Feature processor for EQRN — process_features","text":"Feature processor EQRN","code":""},{"path":"https://opasche.github.io/EQRN/reference/process_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature processor for EQRN — process_features","text":"","code":"process_features(   X,   intermediate_q_feature,   intermediate_quantiles = NULL,   X_scaling = NULL,   scale_features = TRUE )"},{"path":"https://opasche.github.io/EQRN/reference/process_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature processor for EQRN — process_features","text":"X covariate matrix. intermediate_q_feature Whether use intermediate quantiles additional covariate, appending X matrix (bool). intermediate_quantiles intermediate conditional quantiles. X_scaling Existing \"X_scaling\" object containing precomputed mean variance covariate. enables reusing scaling choice parameters train set, computing excesses validation test set, order avoid overfitting. performed automatically \"EQRN\" objects. scale_features Whether rescale input covariates zero mean unit variance applying network (recommended). X_scaling given, X_scaling$scaling overrides scale_features.","code":""},{"path":"https://opasche.github.io/EQRN/reference/process_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Feature processor for EQRN — process_features","text":"Named list containing: X_excessesthe (possibly rescaled q_feat transformed) covariate matrix, X_scalingobject class \"X_scaling\" use consistent scaling future datasets.","code":""},{"path":"https://opasche.github.io/EQRN/reference/proportion_below.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion of observations below conditional quantile vector — proportion_below","title":"Proportion of observations below conditional quantile vector — proportion_below","text":"Proportion observations conditional quantile vector","code":""},{"path":"https://opasche.github.io/EQRN/reference/proportion_below.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion of observations below conditional quantile vector — proportion_below","text":"","code":"proportion_below(y, Q_hat, na.rm = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/proportion_below.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportion of observations below conditional quantile vector — proportion_below","text":"y Vector observations. Q_hat Vector predicted quantiles. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/proportion_below.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportion of observations below conditional quantile vector — proportion_below","text":"proportion observation predictions.","code":""},{"path":"https://opasche.github.io/EQRN/reference/proportion_below.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportion of observations below conditional quantile vector — proportion_below","text":"","code":"proportion_below(c(2.3, 4.2, 1.8), c(2.9, 5.6, 1.7)) #> [1] 0.6666667"},{"path":"https://opasche.github.io/EQRN/reference/QRNN_RNN_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Recurrent quantile regression neural network module — QRNN_RNN_net","title":"Recurrent quantile regression neural network module — QRNN_RNN_net","text":"recurrent neural network torch::nn_module, designed quantile regression.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRNN_RNN_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recurrent quantile regression neural network module — QRNN_RNN_net","text":"","code":"QRNN_RNN_net(   type = c(\"lstm\", \"gru\"),   nb_input_features,   hidden_size,   num_layers = 1,   dropout = 0 )"},{"path":"https://opasche.github.io/EQRN/reference/QRNN_RNN_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recurrent quantile regression neural network module — QRNN_RNN_net","text":"type type recurrent architecture, can one \"lstm\" (default) \"gru\", nb_input_features input size (.e. number features), hidden_size dimension hidden latent state variables recurrent network, num_layers number recurrent layers, dropout probability parameter dropout hidden layer regularization training.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRNN_RNN_net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recurrent quantile regression neural network module — QRNN_RNN_net","text":"constructor allows specifying: typethe type recurrent architecture, can one \"lstm\" (default) \"gru\", nb_input_featuresthe input size (.e. number features), hidden_sizethe dimension hidden latent state variables recurrent network, num_layersthe number recurrent layers, dropoutprobability parameter dropout hidden layer regularization training.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_fit_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for fitting a recurrent QRN with restart for stability — QRN_fit_multiple","title":"Wrapper for fitting a recurrent QRN with restart for stability — QRN_fit_multiple","text":"Wrapper fitting recurrent QRN restart stability","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_fit_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for fitting a recurrent QRN with restart for stability — QRN_fit_multiple","text":"","code":"QRN_fit_multiple(   X,   y,   q_level,   number_fits = 3,   ...,   seed = NULL,   data_type = c(\"seq\", \"iid\") )"},{"path":"https://opasche.github.io/EQRN/reference/QRN_fit_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for fitting a recurrent QRN with restart for stability — QRN_fit_multiple","text":"X Matrix covariates, training. y Response variable vector model conditional quantile , training. q_level Probability level desired conditional quantiles predict. number_fits Number restarts. ... parameters given QRN_seq_fit(). seed Integer random seed reproducibility network weight initialization. data_type Type data dependence, must one \"iid\" (iid observations) \"seq\" (sequentially dependent observations). moment, \"seq\" accepted.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_fit_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for fitting a recurrent QRN with restart for stability — QRN_fit_multiple","text":"QRN object classes c(\"QRN_seq\", \"QRN\"), containing fitted network, well relevant information usage functions.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Recurrent QRN fitting function — QRN_seq_fit","title":"Recurrent QRN fitting function — QRN_seq_fit","text":"Used fit recurrent quantile regression neural network data sample. Use QRN_fit_multiple() wrapper instead, data_type=\"seq\", better stability using fitting restart.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recurrent QRN fitting function — QRN_seq_fit","text":"","code":"QRN_seq_fit(   X,   Y,   q_level,   hidden_size = 10,   num_layers = 1,   rnn_type = c(\"lstm\", \"gru\"),   p_drop = 0,   learning_rate = 1e-04,   L2_pen = 0,   seq_len = 10,   scale_features = TRUE,   n_epochs = 10000,   batch_size = 256,   X_valid = NULL,   Y_valid = NULL,   lr_decay = 1,   patience_decay = n_epochs,   min_lr = 0,   patience_stop = n_epochs,   tol = 1e-04,   fold_separation = NULL,   warm_start_path = NULL,   patience_lag = 5,   optim_met = \"adam\",   seed = NULL,   verbose = 2,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recurrent QRN fitting function — QRN_seq_fit","text":"X Matrix covariates, training. Entries must sequential order. Y Response variable vector model conditional quantile , training. Entries must sequential order. q_level Probability level desired conditional quantiles predict. hidden_size Dimension hidden latent state variables recurrent network. num_layers Number recurrent layers. rnn_type Type recurrent architecture, can one \"lstm\" (default) \"gru\". p_drop Probability parameter dropout hidden layer regularization training. learning_rate Initial learning rate optimizer training neural network. L2_pen L2 weight penalty parameter regularization training. seq_len Data sequence length (.e. number past observations) used training predict response quantile. scale_features Whether rescale input covariates zero mean unit covariance applying network (recommended). n_epochs Number training epochs. batch_size Batch size used training. X_valid Covariates validation set, NULL. Entries must sequential order. Used monitoring validation loss training, enabling learning-rate decay early stopping. Y_valid Response variable validation set, NULL. Entries must sequential order. Used monitoring validation loss training, enabling learning-rate decay early stopping. lr_decay Learning rate decay factor. patience_decay Number epochs non-improving validation loss learning-rate decay performed. min_lr Minimum learning rate, decay performed. patience_stop Number epochs non-improving validation loss early stopping performed. tol Tolerance stopping training, case significant training loss improvements. fold_separation Index fold separation sequential discontinuity data. warm_start_path Path saved network using torch::torch_save(), load back warm start. patience_lag validation loss considered non-improving larger previous patience_lag epochs. optim_met DEPRECATED. Optimization algorithm use training. \"adam\" default. seed Integer random seed reproducibility network weight initialization. verbose Amount information printed training (0:nothing, 1:important, 2:everything). device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recurrent QRN fitting function — QRN_seq_fit","text":"QRN object classes c(\"QRN_seq\", \"QRN\"), containing fitted network, well relevant information usage functions.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict function for a QRN_seq fitted object — QRN_seq_predict","title":"Predict function for a QRN_seq fitted object — QRN_seq_predict","text":"Predict function QRN_seq fitted object","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict function for a QRN_seq fitted object — QRN_seq_predict","text":"","code":"QRN_seq_predict(   fit_qrn_ts,   X,   Y,   q_level = fit_qrn_ts$interm_lvl,   crop_predictions = FALSE,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict function for a QRN_seq fitted object — QRN_seq_predict","text":"fit_qrn_ts Fitted \"QRN_seq\" object. X Matrix covariates predict corresponding response's conditional quantiles. Y Response variable vector corresponding rows X. q_level Optional, checks q_level == fit_qrn_ts$interm_lvl. crop_predictions Whether crop fist seq_len observations (NA) returned matrix. device (optional) torch::torch_device(). Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict function for a QRN_seq fitted object — QRN_seq_predict","text":"Matrix size nrow(X) times 1 (nrow(X)-seq_len times 1 crop_predictions) containing conditional quantile estimates corresponding response observations.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict_foldwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise","title":"Foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise","text":"Foldwise fit-predict function using recurrent QRN","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict_foldwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise","text":"","code":"QRN_seq_predict_foldwise(   X,   y,   q_level,   n_folds = 3,   number_fits = 3,   seq_len = 10,   seed = NULL,   ... )"},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict_foldwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise","text":"X Matrix covariates, training. Entries must sequential order. y Response variable vector model conditional quantile , training. Entries must sequential order. q_level Probability level desired conditional quantiles predict. n_folds Number folds. number_fits Number restarts, stability. seq_len Data sequence length (.e. number past observations) used training predict response quantile. seed Integer random seed reproducibility network weight initialization. ... parameters given QRN_seq_fit().","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict_foldwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise","text":"named list containing foldwise predictions fits. namely contains: predictionsthe numerical vector quantile predictions observation entry y, fitsa list containing \"QRN_seq\" fitted networks fold, cutsthe fold cuts indices, foldsa list lists containing train indices, validation indices fold separations list fold setup, n_foldsnumber folds, q_levelprobability level predicted quantiles, train_lossesthe vector train losses fold, valid_lossesthe vector validation losses fold, min_valid_lossesthe minimal validation losses obtained fold, min_valid_ethe epoch index minimal validation losses obtained fold.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict_foldwise_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Sigle-fold foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise_sep","title":"Sigle-fold foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise_sep","text":"Separated single-fold version QRN_seq_predict_foldwise(), computation purposes.","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict_foldwise_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigle-fold foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise_sep","text":"","code":"QRN_seq_predict_foldwise_sep(   X,   y,   q_level,   n_folds = 3,   fold_todo = 1,   number_fits = 3,   seq_len = 10,   seed = NULL,   ... )"},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict_foldwise_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigle-fold foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise_sep","text":"X Matrix covariates, training. Entries must sequential order. y Response variable vector model conditional quantile , training. Entries must sequential order. q_level Probability level desired conditional quantiles predict. n_folds Number folds. fold_todo Index fold (integer 1:n_folds). number_fits Number restarts, stability. seq_len Data sequence length (.e. number past observations) used training predict response quantile. seed Integer random seed reproducibility network weight initialization. ... parameters given QRN_seq_fit().","code":""},{"path":"https://opasche.github.io/EQRN/reference/QRN_seq_predict_foldwise_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sigle-fold foldwise fit-predict function using a recurrent QRN — QRN_seq_predict_foldwise_sep","text":"named list containing foldwise predictions fits. namely contains: predictionsthe numerical vector quantile predictions observation entry y, fitsa list containing \"QRN_seq\" fitted networks fold, cutsthe fold cuts indices, foldsa list lists containing train indices, validation indices fold separations list fold setup, n_foldsnumber folds, q_levelprobability level predicted quantiles, train_lossesthe vector train losses fold, valid_lossesthe vector validation losses fold, min_valid_lossesthe minimal validation losses obtained fold, min_valid_ethe epoch index minimal validation losses obtained fold.","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_exceedance_proba_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile exceedance probability prediction calibration error — quantile_exceedance_proba_error","title":"Quantile exceedance probability prediction calibration error — quantile_exceedance_proba_error","text":"Quantile exceedance probability prediction calibration error","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_exceedance_proba_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile exceedance probability prediction calibration error — quantile_exceedance_proba_error","text":"","code":"quantile_exceedance_proba_error(   Probs,   prob_level = NULL,   return_years = NULL,   type_probs = c(\"cdf\", \"exceedance\"),   na.rm = FALSE )"},{"path":"https://opasche.github.io/EQRN/reference/quantile_exceedance_proba_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile exceedance probability prediction calibration error — quantile_exceedance_proba_error","text":"Probs Predicted probabilities exceed smaller fixed quantile. prob_level Probability level quantile. return_years probability level can given term return years instead. used prob_level given. type_probs Whether predictions \"cdf\" (default) \"exceedance\" probabilities. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_exceedance_proba_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile exceedance probability prediction calibration error — quantile_exceedance_proba_error","text":"calibration metric predicted probabilities.","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_exceedance_proba_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile exceedance probability prediction calibration error — quantile_exceedance_proba_error","text":"","code":"quantile_exceedance_proba_error(c(0.1, 0.3, 0.2), prob_level=0.8) #> [1] -0.6"},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile loss — quantile_loss","title":"Quantile loss — quantile_loss","text":"Quantile loss","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile loss — quantile_loss","text":"","code":"quantile_loss(   y,   y_hat,   q,   return_agg = c(\"mean\", \"sum\", \"vector\"),   na.rm = FALSE )"},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile loss — quantile_loss","text":"y Vector observations. y_hat Vector predicted quantiles probability level q. q Probability level predicted quantile. return_agg Whether return \"mean\" (default), \"sum\", \"vector\" losses. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile loss — quantile_loss","text":"mean (total vectorial) quantile loss y y_hat level q.","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile loss — quantile_loss","text":"","code":"quantile_loss(c(2.3, 4.2, 1.8), c(2.9, 5.6, 2.7), q=0.8) #> [1] 0.1933333"},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss_tensor.html","id":null,"dir":"Reference","previous_headings":"","what":"Tensor quantile loss function for training a QRN network — quantile_loss_tensor","title":"Tensor quantile loss function for training a QRN network — quantile_loss_tensor","text":"Tensor quantile loss function training QRN network","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss_tensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tensor quantile loss function for training a QRN network — quantile_loss_tensor","text":"","code":"quantile_loss_tensor(   out,   y,   q = 0.5,   return_agg = c(\"mean\", \"sum\", \"vector\", \"nanmean\", \"nansum\") )"},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss_tensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tensor quantile loss function for training a QRN network — quantile_loss_tensor","text":"Batch tensor quantile output network. y Batch tensor corresponding response variable. q Probability level predicted quantile return_agg return aggregation computed loss batch. Must one \"mean\", \"sum\", \"vector\", \"nanmean\", \"nansum\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_loss_tensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tensor quantile loss function for training a QRN network — quantile_loss_tensor","text":"quantile loss batch network output ans observed responses torch::Tensor, whose dimensions depend return_agg.","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_prediction_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile prediction calibration error — quantile_prediction_error","title":"Quantile prediction calibration error — quantile_prediction_error","text":"Quantile prediction calibration error","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_prediction_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile prediction calibration error — quantile_prediction_error","text":"","code":"quantile_prediction_error(y, Q_hat, prob_level, na.rm = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/quantile_prediction_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile prediction calibration error — quantile_prediction_error","text":"y Vector observations. Q_hat Vector predicted quantiles probability level prob_level. prob_level Probability level predicted quantile. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_prediction_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile prediction calibration error — quantile_prediction_error","text":"quantile prediction error calibration metric.","code":""},{"path":"https://opasche.github.io/EQRN/reference/quantile_prediction_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile prediction calibration error — quantile_prediction_error","text":"","code":"quantile_prediction_error(c(2.3, 4.2, 1.8), c(2.9, 5.6, 2.7), prob_level=0.8) #> [1] 0.8660254"},{"path":"https://opasche.github.io/EQRN/reference/Recurrent_GPD_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Recurrent network module for GPD parameter prediction — Recurrent_GPD_net","title":"Recurrent network module for GPD parameter prediction — Recurrent_GPD_net","text":"recurrent neural network torch::nn_module, designed generalized Pareto distribution parameter prediction, sequential dependence.","code":""},{"path":"https://opasche.github.io/EQRN/reference/Recurrent_GPD_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recurrent network module for GPD parameter prediction — Recurrent_GPD_net","text":"","code":"Recurrent_GPD_net(   type = c(\"lstm\", \"gru\"),   nb_input_features,   hidden_size,   num_layers = 1,   dropout = 0,   shape_fixed = FALSE,   device = default_device() )"},{"path":"https://opasche.github.io/EQRN/reference/Recurrent_GPD_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recurrent network module for GPD parameter prediction — Recurrent_GPD_net","text":"type type recurrent architecture, can one \"lstm\" (default) \"gru\", nb_input_features input size (.e. number features), hidden_size dimension hidden latent state variables recurrent network, num_layers number recurrent layers, dropout probability parameter dropout hidden layer regularization training, shape_fixed whether shape estimate depends covariates (bool), device torch::torch_device() internal constant vector. Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/Recurrent_GPD_net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recurrent network module for GPD parameter prediction — Recurrent_GPD_net","text":"constructor allows specifying: typethe type recurrent architecture, can one \"lstm\" (default) \"gru\", nb_input_featuresthe input size (.e. number features), hidden_sizethe dimension hidden latent state variables recurrent network, num_layersthe number recurrent layers, dropoutprobability parameter dropout hidden layer regularization training, shape_fixedwhether shape estimate depends covariates (bool), devicea torch::torch_device() internal constant vector. Defaults default_device().","code":""},{"path":"https://opasche.github.io/EQRN/reference/rep_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Tibble replicatior — rep_tibble","title":"Tibble replicatior — rep_tibble","text":"Tibble replicatior","code":""},{"path":"https://opasche.github.io/EQRN/reference/rep_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tibble replicatior — rep_tibble","text":"","code":"rep_tibble(tbl, m)"},{"path":"https://opasche.github.io/EQRN/reference/rep_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tibble replicatior — rep_tibble","text":"tbl tibble::tibble(). m integer.","code":""},{"path":"https://opasche.github.io/EQRN/reference/rep_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tibble replicatior — rep_tibble","text":"tibble replicated m times colums names appended rep_id = 1:m.","code":""},{"path":"https://opasche.github.io/EQRN/reference/rep_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tibble replicatior — rep_tibble","text":"","code":"#rep_tibble(tibble::tibble(a=c(2,3), b=c(5,6)), 3)"},{"path":"https://opasche.github.io/EQRN/reference/rep_vector2matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Replicated vector to matrix — rep_vector2matrix","title":"Replicated vector to matrix — rep_vector2matrix","text":"Replicated vector matrix","code":""},{"path":"https://opasche.github.io/EQRN/reference/rep_vector2matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replicated vector to matrix — rep_vector2matrix","text":"","code":"rep_vector2matrix(vec, nrep, dim = c(\"row\", \"col\"))"},{"path":"https://opasche.github.io/EQRN/reference/rep_vector2matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replicated vector to matrix — rep_vector2matrix","text":"vec Vector. nrep Number repetitions. dim One \"row\" (default) \"col\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/rep_vector2matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replicated vector to matrix — rep_vector2matrix","text":"Matrix replicated vector.","code":""},{"path":"https://opasche.github.io/EQRN/reference/rep_vector2matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replicated vector to matrix — rep_vector2matrix","text":"","code":"#rep_vector2matrix(c(2, 7, 3, 8), 3, \"row\")"},{"path":"https://opasche.github.io/EQRN/reference/roundm.html","id":null,"dir":"Reference","previous_headings":"","what":"Mathematical number rounding — roundm","title":"Mathematical number rounding — roundm","text":"function rounds numbers mathematical sense, opposed base R function round() rounds 'even digit'.","code":""},{"path":"https://opasche.github.io/EQRN/reference/roundm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mathematical number rounding — roundm","text":"","code":"roundm(x, decimals = 0)"},{"path":"https://opasche.github.io/EQRN/reference/roundm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mathematical number rounding — roundm","text":"x Vector numerical values round. decimals Integer indicating number decimal places used.","code":""},{"path":"https://opasche.github.io/EQRN/reference/roundm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mathematical number rounding — roundm","text":"vector containing entries x, rounded decimals decimals.","code":""},{"path":"https://opasche.github.io/EQRN/reference/roundm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mathematical number rounding — roundm","text":"","code":"roundm(2.25, 1) #> [1] 2.3"},{"path":"https://opasche.github.io/EQRN/reference/R_squared.html","id":null,"dir":"Reference","previous_headings":"","what":"R squared — R_squared","title":"R squared — R_squared","text":"coefficient determination, often called R squared, proportion data variance explained predictions.","code":""},{"path":"https://opasche.github.io/EQRN/reference/R_squared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R squared — R_squared","text":"","code":"R_squared(y, y_hat, na.rm = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/R_squared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R squared — R_squared","text":"y Vector observations ground-truths. y_hat Vector predictions. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://opasche.github.io/EQRN/reference/R_squared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R squared — R_squared","text":"R squared predictions y_hat y.","code":""},{"path":"https://opasche.github.io/EQRN/reference/R_squared.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R squared — R_squared","text":"","code":"R_squared(c(2.3, 4.2, 1.8), c(2.2, 4.6, 1.7)) #> [1] 0.9438669"},{"path":"https://opasche.github.io/EQRN/reference/safe_save_rds.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe RDS save — safe_save_rds","title":"Safe RDS save — safe_save_rds","text":"Safe version saveRDS(). given save path (.e. dirname(file_path)) exist, created instead raising error.","code":""},{"path":"https://opasche.github.io/EQRN/reference/safe_save_rds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe RDS save — safe_save_rds","text":"","code":"safe_save_rds(object, file_path, recursive = TRUE, no_warning = FALSE)"},{"path":"https://opasche.github.io/EQRN/reference/safe_save_rds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe RDS save — safe_save_rds","text":"object R variable object save disk. file_path Path name save file, string. recursive elements path last created? TRUE, behaves like Unix command mkdir -p. no_warning Whether cancel warning issued directory created (bool).","code":""},{"path":"https://opasche.github.io/EQRN/reference/safe_save_rds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safe RDS save — safe_save_rds","text":"","code":"if (FALSE) safe_save_rds(c(1, 2, 8), \"./results/my_new_folder/my_vector.rds\")"},{"path":"https://opasche.github.io/EQRN/reference/semiconditional_train_valid_GPD_loss.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi-conditional GPD MLEs and their train-validation likelihoods — semiconditional_train_valid_GPD_loss","title":"Semi-conditional GPD MLEs and their train-validation likelihoods — semiconditional_train_valid_GPD_loss","text":"Semi-conditional GPD MLEs train-validation likelihoods","code":""},{"path":"https://opasche.github.io/EQRN/reference/semiconditional_train_valid_GPD_loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi-conditional GPD MLEs and their train-validation likelihoods — semiconditional_train_valid_GPD_loss","text":"","code":"semiconditional_train_valid_GPD_loss(   Y_train,   Y_valid,   interm_quant_train,   interm_quant_valid )"},{"path":"https://opasche.github.io/EQRN/reference/semiconditional_train_valid_GPD_loss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi-conditional GPD MLEs and their train-validation likelihoods — semiconditional_train_valid_GPD_loss","text":"Y_train Vector \"training\" observations estimate MLEs. Y_valid Vector \"validation\" observations, estimate training sample GPD loss. interm_quant_train Vector intermediate quantiles serving varying threshold training observation. interm_quant_valid Vector intermediate quantiles serving varying threshold validation observation.","code":""},{"path":"https://opasche.github.io/EQRN/reference/semiconditional_train_valid_GPD_loss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi-conditional GPD MLEs and their train-validation likelihoods — semiconditional_train_valid_GPD_loss","text":"Named list containing: scaleGPD scale MLE inferred train set, shapeGPD shape MLE inferred train set, train_lossthe negative log-likelihoods MLEs training samples, valid_lossthe negative log-likelihoods MLEs validation samples.","code":""},{"path":"https://opasche.github.io/EQRN/reference/Separated_GPD_SNN.html","id":null,"dir":"Reference","previous_headings":"","what":"Self-normalized separated network module for GPD parameter prediction — Separated_GPD_SNN","title":"Self-normalized separated network module for GPD parameter prediction — Separated_GPD_SNN","text":"parameter-separated self-normalizing network (multi-layer perception) torch::nn_module, designed generalized Pareto distribution parameter prediction.","code":""},{"path":"https://opasche.github.io/EQRN/reference/Separated_GPD_SNN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self-normalized separated network module for GPD parameter prediction — Separated_GPD_SNN","text":"","code":"Separated_GPD_SNN(   D_in,   Hidden_vect_scale = c(64, 64, 64),   Hidden_vect_shape = c(5, 3),   p_drop = 0.01 )"},{"path":"https://opasche.github.io/EQRN/reference/Separated_GPD_SNN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self-normalized separated network module for GPD parameter prediction — Separated_GPD_SNN","text":"D_in input size (.e. number features), Hidden_vect_scale vector integers whose length determines number layers sub-network scale parameter entries number neurons corresponding successive layer, Hidden_vect_shape vector integers whose length determines number layers sub-network shape parameter entries number neurons corresponding successive layer, p_drop probability parameter alpha-dropout hidden layer regularization training.","code":""},{"path":"https://opasche.github.io/EQRN/reference/Separated_GPD_SNN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Self-normalized separated network module for GPD parameter prediction — Separated_GPD_SNN","text":"constructor allows specifying: D_inthe input size (.e. number features), Hidden_vect_scalea vector integers whose length determines number layers sub-network scale parameter entries number neurons corresponding successive layer, Hidden_vect_shapea vector integers whose length determines number layers sub-network shape parameter entries number neurons corresponding successive layer, p_dropprobability parameter alpha-dropout hidden layer regularization training.","code":""},{"path":"https://opasche.github.io/EQRN/reference/Separated_GPD_SNN.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Self-normalized separated network module for GPD parameter prediction — Separated_GPD_SNN","text":"Gunter Klambauer, Thomas Unterthiner, Andreas Mayr, Sepp Hochreiter. Self-Normalizing Neural Networks. Advances Neural Information Processing Systems 30 (NIPS 2017), 2017.","code":""},{"path":"https://opasche.github.io/EQRN/reference/setup_optimizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Instantiate an optimizer for training an EQRN_iid network — setup_optimizer","title":"Instantiate an optimizer for training an EQRN_iid network — setup_optimizer","text":"Instantiate optimizer training EQRN_iid network","code":""},{"path":"https://opasche.github.io/EQRN/reference/setup_optimizer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instantiate an optimizer for training an EQRN_iid network — setup_optimizer","text":"","code":"setup_optimizer(network, learning_rate, L2_pen, hidden_fct, optim_met = \"adam\")"},{"path":"https://opasche.github.io/EQRN/reference/setup_optimizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instantiate an optimizer for training an EQRN_iid network — setup_optimizer","text":"network torch::nn_module network trained EQRN_fit(). learning_rate Initial learning rate optimizer training neural network. L2_pen L2 weight penalty parameter regularization training. hidden_fct Activation function hidden layers. Can either callable function (preferably torch library), one strings \"SNN\", \"SSNN\" self normalizing networks (common separated networks scale shape estimates, respectively). affect default choice optimizer. optim_met DEPRECATED. Optimization algorithm use training. \"adam\" default.","code":""},{"path":"https://opasche.github.io/EQRN/reference/setup_optimizer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Instantiate an optimizer for training an EQRN_iid network — setup_optimizer","text":"torch::optimizer object used EQRN_fit() training.","code":""},{"path":"https://opasche.github.io/EQRN/reference/setup_optimizer_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Instantiate an optimizer for training an EQRN_seq network — setup_optimizer_seq","title":"Instantiate an optimizer for training an EQRN_seq network — setup_optimizer_seq","text":"Instantiate optimizer training EQRN_seq network","code":""},{"path":"https://opasche.github.io/EQRN/reference/setup_optimizer_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instantiate an optimizer for training an EQRN_seq network — setup_optimizer_seq","text":"","code":"setup_optimizer_seq(network, learning_rate, L2_pen, optim_met = \"adam\")"},{"path":"https://opasche.github.io/EQRN/reference/setup_optimizer_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instantiate an optimizer for training an EQRN_seq network — setup_optimizer_seq","text":"network torch::nn_module network trained EQRN_fit_seq(). learning_rate Initial learning rate optimizer training neural network. L2_pen L2 weight penalty parameter regularization training. optim_met DEPRECATED. Optimization algorithm use training. \"adam\" default.","code":""},{"path":"https://opasche.github.io/EQRN/reference/setup_optimizer_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Instantiate an optimizer for training an EQRN_seq network — setup_optimizer_seq","text":"torch::optimizer object used EQRN_fit_seq() training.","code":""},{"path":"https://opasche.github.io/EQRN/reference/set_doFuture_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a doFuture execution strategy — set_doFuture_strategy","title":"Set a doFuture execution strategy — set_doFuture_strategy","text":"Set doFuture execution strategy","code":""},{"path":"https://opasche.github.io/EQRN/reference/set_doFuture_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a doFuture execution strategy — set_doFuture_strategy","text":"","code":"set_doFuture_strategy(   strategy = c(\"sequential\", \"multisession\", \"multicore\", \"mixed\"),   n_workers = NULL )"},{"path":"https://opasche.github.io/EQRN/reference/set_doFuture_strategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a doFuture execution strategy — set_doFuture_strategy","text":"strategy One \"sequential\" (default), \"multisession\", \"multicore\", \"mixed\". n_workers positive numeric scalar function specifying maximum number parallel futures can active time blocking. function, called without arguments future created value used configure workers. function return numeric scalar. Defaults future::availableCores()-1 NULL (default), \"multicore\" constraint relevant case. Ignored strategy==\"sequential\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/set_doFuture_strategy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a doFuture execution strategy — set_doFuture_strategy","text":"corresponding get_doFuture_operator() operator use foreach::foreach() loop.","code":""},{"path":"https://opasche.github.io/EQRN/reference/set_doFuture_strategy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a doFuture execution strategy — set_doFuture_strategy","text":"","code":"if (FALSE) { `%fun%` <- set_doFuture_strategy(\"multisession\", n_workers=3) # perform foreach::foreach loop end_doFuture_strategy() }"},{"path":"https://opasche.github.io/EQRN/reference/square_loss.html","id":null,"dir":"Reference","previous_headings":"","what":"Square loss — square_loss","title":"Square loss — square_loss","text":"Square loss","code":""},{"path":"https://opasche.github.io/EQRN/reference/square_loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Square loss — square_loss","text":"","code":"square_loss(y, y_hat)"},{"path":"https://opasche.github.io/EQRN/reference/square_loss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Square loss — square_loss","text":"y Vector observations ground-truths. y_hat Vector predictions.","code":""},{"path":"https://opasche.github.io/EQRN/reference/square_loss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Square loss — square_loss","text":"vector square errors y y_hat.","code":""},{"path":"https://opasche.github.io/EQRN/reference/square_loss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Square loss — square_loss","text":"","code":"square_loss(c(2.3, 4.2, 1.8), c(2.2, 4.6, 1.7)) #> [1] 0.01 0.16 0.01"},{"path":"https://opasche.github.io/EQRN/reference/start_doParallel_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a doParallel execution strategy — start_doParallel_strategy","title":"Start a doParallel execution strategy — start_doParallel_strategy","text":"Start doParallel execution strategy","code":""},{"path":"https://opasche.github.io/EQRN/reference/start_doParallel_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a doParallel execution strategy — start_doParallel_strategy","text":"","code":"start_doParallel_strategy(   strategy = c(\"sequential\", \"parallel\"),   n_workers = NULL )"},{"path":"https://opasche.github.io/EQRN/reference/start_doParallel_strategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a doParallel execution strategy — start_doParallel_strategy","text":"strategy One \"sequential\" (default) \"parallel\". n_workers Number parallel workers integer. Defaults parallel::detectCores()-1 NULL (default). Ignored strategy==\"sequential\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/start_doParallel_strategy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a doParallel execution strategy — start_doParallel_strategy","text":"named list containing: par_operatorthe relevant foreach::foreach() loop operator, clthe cluster object.","code":""},{"path":"https://opasche.github.io/EQRN/reference/start_doParallel_strategy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a doParallel execution strategy — start_doParallel_strategy","text":"","code":"if (FALSE) { cl <- start_doParallel_strategy(\"parallel\", n_workers=3) stop_doParallel_strategy(\"parallel\", cl) }"},{"path":"https://opasche.github.io/EQRN/reference/stop_doParallel_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop the current doParallel strategy — stop_doParallel_strategy","title":"Stop the current doParallel strategy — stop_doParallel_strategy","text":"Stops given cluster, using parallel::stopCluster(), strategy==\"parallel\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/stop_doParallel_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop the current doParallel strategy — stop_doParallel_strategy","text":"","code":"stop_doParallel_strategy(strategy = c(\"sequential\", \"parallel\"), cl)"},{"path":"https://opasche.github.io/EQRN/reference/stop_doParallel_strategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop the current doParallel strategy — stop_doParallel_strategy","text":"strategy One \"sequential\" (default) \"parallel\". cl Cluster object, returned start_doParallel_strategy(), called strategy.","code":""},{"path":"https://opasche.github.io/EQRN/reference/stop_doParallel_strategy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stop the current doParallel strategy — stop_doParallel_strategy","text":"","code":"if (FALSE) { cl <- start_doParallel_strategy(\"parallel\", n_workers=3) stop_doParallel_strategy(\"parallel\", cl) }"},{"path":"https://opasche.github.io/EQRN/reference/unconditional_train_valid_GPD_loss.html","id":null,"dir":"Reference","previous_headings":"","what":"Unconditional GPD MLEs and their train-validation likelihoods — unconditional_train_valid_GPD_loss","title":"Unconditional GPD MLEs and their train-validation likelihoods — unconditional_train_valid_GPD_loss","text":"Unconditional GPD MLEs train-validation likelihoods","code":""},{"path":"https://opasche.github.io/EQRN/reference/unconditional_train_valid_GPD_loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unconditional GPD MLEs and their train-validation likelihoods — unconditional_train_valid_GPD_loss","text":"","code":"unconditional_train_valid_GPD_loss(Y_train, interm_lvl, Y_valid)"},{"path":"https://opasche.github.io/EQRN/reference/unconditional_train_valid_GPD_loss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unconditional GPD MLEs and their train-validation likelihoods — unconditional_train_valid_GPD_loss","text":"Y_train Vector \"training\" observations estimate MLEs. interm_lvl Probability level empirical quantile used threshold. Y_valid Vector \"validation\" observations, estimate training sample GPD loss.","code":""},{"path":"https://opasche.github.io/EQRN/reference/unconditional_train_valid_GPD_loss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unconditional GPD MLEs and their train-validation likelihoods — unconditional_train_valid_GPD_loss","text":"Named list containing: scaleGPD scale MLE inferred train set, shapeGPD shape MLE inferred train set, train_lossthe negative log-likelihoods MLEs training samples, valid_lossthe negative log-likelihoods MLEs validation samples.","code":""},{"path":"https://opasche.github.io/EQRN/reference/vec2mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a vector to a matrix — vec2mat","title":"Convert a vector to a matrix — vec2mat","text":"Convert vector matrix","code":""},{"path":"https://opasche.github.io/EQRN/reference/vec2mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a vector to a matrix — vec2mat","text":"","code":"vec2mat(v, axis = c(\"col\", \"row\"))"},{"path":"https://opasche.github.io/EQRN/reference/vec2mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a vector to a matrix — vec2mat","text":"v Vector. axis One \"col\" (default) \"row\".","code":""},{"path":"https://opasche.github.io/EQRN/reference/vec2mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a vector to a matrix — vec2mat","text":"vector v matrix. axis==\"col\" (default) column vector v returned length(v) times 1 matrix. axis==\"row\", vector v returned transposed 1 times length(v) matrix.","code":""},{"path":"https://opasche.github.io/EQRN/reference/vec2mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a vector to a matrix — vec2mat","text":"","code":"vec2mat(c(2, 7, 3, 8), \"col\") #>      [,1] [,2] [,3] [,4] #> [1,]    2    7    3    8"},{"path":"https://opasche.github.io/EQRN/reference/vector_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert value in vector — vector_insert","title":"Insert value in vector — vector_insert","text":"Insert value vector","code":""},{"path":"https://opasche.github.io/EQRN/reference/vector_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert value in vector — vector_insert","text":"","code":"vector_insert(vect, val, ind)"},{"path":"https://opasche.github.io/EQRN/reference/vector_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert value in vector — vector_insert","text":"vect 1-D vector. val value insert vector. ind index insert value vector, must integer 1 length(vect) + 1.","code":""},{"path":"https://opasche.github.io/EQRN/reference/vector_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert value in vector — vector_insert","text":"1-D vector length length(vect) + 1, val inserted position ind original vect.","code":""},{"path":"https://opasche.github.io/EQRN/reference/vector_insert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert value in vector — vector_insert","text":"","code":"vector_insert(c(2, 7, 3, 8), val=5, ind=3) #> [1] 2 7 5 3 8"},{"path":"https://opasche.github.io/EQRN/news/index.html","id":"eqrn-010","dir":"Changelog","previous_headings":"","what":"EQRN 0.1.0","title":"EQRN 0.1.0","text":"Final version research paper “Neural Networks Extreme Quantile Regression Application Forecasting Flood Risk” Olivier C. Pasche Sebastian Engelke (ArXiv:2208.07590).","code":""},{"path":"https://opasche.github.io/EQRN/news/index.html","id":"eqrn-001","dir":"Changelog","previous_headings":"","what":"EQRN 0.0.1","title":"EQRN 0.0.1","text":"Initial version research paper.","code":""}]
